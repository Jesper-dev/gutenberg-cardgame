[{"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\index.js":"1","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\App.js":"2","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\BattleField.js":"3","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvas\\Canvas.js":"4","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsarray\\CardArray.js":"5","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\BattleFieldElements.js":"6","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvas\\CanvasElements.js":"7","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCardBattleField.js":"8","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCardBattleField.js":"9","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\player\\Player.js":"10","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\player\\PlayerElements.js":"11","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCardBattleFieldElements.js":"12","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCardBattleFieldElements.js":"13","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCard.js":"14","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCard.js":"15","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCardElements.js":"16","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCardElements.js":"17","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\FunctionsComponent.js":"18","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\OpponentBattleField.js":"19","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\opponent\\OpponentTurn.js":"20","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\OpponentBattleFieldElements.js":"21","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvasInterface\\CanvasInterfaceRender.js":"22","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsHand\\OpponentCardsHandRender.js":"23","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsHand\\CardsHand.js":"24","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsHand\\OpponentCardsHand.js":"25","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsHand\\OpponentCardsHandElements.js":"26","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\player\\LeftToolBar.js":"27","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsarray\\OpponentCardArray.js":"28","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\Spelleffects\\Spells.js":"29","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\Spelleffects\\SpellShowRender.js":"30","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\OppCharBattleField.js":"31","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvasInterface\\CanvasInterfaceElements.js":"32","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\Spelleffects\\SpellShowCard.js":"33","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\Spelleffects\\SpellShowCardElements.js":"34","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\settings\\Settings.js":"35","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\settings\\SettingsElements.js":"36"},{"size":167,"mtime":1612534272769,"results":"37","hashOfConfig":"38"},{"size":725,"mtime":1612534272661,"results":"39","hashOfConfig":"38"},{"size":2019,"mtime":1612534272743,"results":"40","hashOfConfig":"38"},{"size":9861,"mtime":1612534450820,"results":"41","hashOfConfig":"38"},{"size":13916,"mtime":1612534272763,"results":"42","hashOfConfig":"38"},{"size":297,"mtime":1612534272743,"results":"43","hashOfConfig":"38"},{"size":4722,"mtime":1612534504856,"results":"44","hashOfConfig":"38"},{"size":1135,"mtime":1612534272753,"results":"45","hashOfConfig":"38"},{"size":984,"mtime":1612534272757,"results":"46","hashOfConfig":"38"},{"size":425,"mtime":1612534272765,"results":"47","hashOfConfig":"38"},{"size":2000,"mtime":1612534272766,"results":"48","hashOfConfig":"38"},{"size":2601,"mtime":1612534272754,"results":"49","hashOfConfig":"38"},{"size":1816,"mtime":1612534272758,"results":"50","hashOfConfig":"38"},{"size":1496,"mtime":1612534272752,"results":"51","hashOfConfig":"38"},{"size":760,"mtime":1612534272756,"results":"52","hashOfConfig":"38"},{"size":3899,"mtime":1612534272754,"results":"53","hashOfConfig":"38"},{"size":2521,"mtime":1612534272759,"results":"54","hashOfConfig":"38"},{"size":22330,"mtime":1612534470720,"results":"55","hashOfConfig":"38"},{"size":2182,"mtime":1612534272744,"results":"56","hashOfConfig":"38"},{"size":593,"mtime":1612534272764,"results":"57","hashOfConfig":"38"},{"size":297,"mtime":1612534272745,"results":"58","hashOfConfig":"38"},{"size":5181,"mtime":1612534272751,"results":"59","hashOfConfig":"38"},{"size":457,"mtime":1612534272762,"results":"60","hashOfConfig":"38"},{"size":2133,"mtime":1612534272760,"results":"61","hashOfConfig":"38"},{"size":720,"mtime":1612534272760,"results":"62","hashOfConfig":"38"},{"size":767,"mtime":1612534272761,"results":"63","hashOfConfig":"38"},{"size":720,"mtime":1612534227331,"results":"64","hashOfConfig":"38"},{"size":14264,"mtime":1612534272763,"results":"65","hashOfConfig":"38"},{"size":4962,"mtime":1612534272742,"results":"66","hashOfConfig":"38"},{"size":1121,"mtime":1612534272741,"results":"67","hashOfConfig":"38"},{"size":1080,"mtime":1612534272755,"results":"68","hashOfConfig":"38"},{"size":3153,"mtime":1612534272750,"results":"69","hashOfConfig":"38"},{"size":1134,"mtime":1612534272736,"results":"70","hashOfConfig":"38"},{"size":1985,"mtime":1612534272740,"results":"71","hashOfConfig":"38"},{"size":1159,"mtime":1612534272768,"results":"72","hashOfConfig":"38"},{"size":615,"mtime":1612534272768,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"103feb",{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"79"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"79"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"79"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"79"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"79"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"79"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"79"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"79"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"79"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"79"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"79"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"79"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"79"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\index.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\App.js",["161"],"import React from 'react'\r\nimport Canvas from \"./components/canvas/Canvas\"\r\nimport { createGlobalStyle } from 'styled-components'\r\nimport { CardsArray } from './components/cardsarray/CardArray'\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n      <>\r\n        <GlobalStyle />\r\n        <Canvas array={CardsArray}/>\r\n      </>\r\n    )\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n`\r\n\r\nexport default App\r\n",["162","163"],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\BattleField.js",["164","165"],"import React, { useState } from \"react\";\r\nimport CharacterCardBattleField from \"../card/CharacterCardBattleField\";\r\nimport SpellCardBattleField from \"../card/SpellCardBattleField\";\r\nimport {\r\n  BattlefieldContainer,\r\n  BattlefieldInnerContainer,\r\n} from \"./BattleFieldElements\";\r\n\r\nconst BattleField = ({ Battlefield, onAttackCardClick, yourturn, chosenAtk, setChosenAtk }) => {\r\n\r\n  const highlightCard = (item) => {\r\n    if (!yourturn) {\r\n      return\r\n    }\r\n    if (item == chosenAtk) {\r\n      setChosenAtk()\r\n    } else {\r\n      setChosenAtk(item)\r\n    }\r\n  }\r\n\r\n  const CheckType = (item) => {\r\n    if (item.type === \"spell\") {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <BattlefieldContainer>\r\n        <BattlefieldInnerContainer>\r\n          {Battlefield.map(function (item, i) {\r\n            return CheckType(item) ? (\r\n              <div key={i}>\r\n                <CharacterCardBattleField\r\n                  id={item.id}\r\n                  value={i}\r\n                  name={item.name}\r\n                  img={item.img}\r\n                  type={item.type}\r\n                  atk={item.atk}\r\n                  def={item.def}\r\n                  descText={item.descText}\r\n                  hp={item.hp}\r\n                  onAttackCardClick={onAttackCardClick}\r\n                  active={item === chosenAtk}\r\n                  onClick={() => highlightCard(item)}\r\n                />\r\n              </div>\r\n            ) : (\r\n                <div key={i}>\r\n                  <SpellCardBattleField\r\n                    id={item.id}\r\n                    key={i}\r\n                    name={item.name}\r\n                    img={item.img}\r\n                    type={item.type}\r\n                    descText={item.descText}\r\n                    cost={item.cost}\r\n                  />\r\n                </div>\r\n              );\r\n          })}\r\n        </BattlefieldInnerContainer>\r\n      </BattlefieldContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BattleField;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvas\\Canvas.js",["166","167","168","169","170","171","172","173","174"],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsarray\\CardArray.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\BattleFieldElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvas\\CanvasElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCardBattleField.js",["175"],"import React, { useState } from \"react\";\r\n/* import SelectReducer from \"./SelectReducer\"; */\r\nimport {\r\n  CardWrapper,\r\n  CardName,\r\n  CardImg,\r\n  AtkDefWrapper,\r\n  Atk,\r\n  Def,\r\n  DescriptionText,\r\n  Type,\r\n  HPWrapper,\r\n  HP,\r\n} from \"./CharacterCardBattleFieldElements\";\r\n\r\n\r\nconst CharacterCardBattleField = ({\r\n  name,\r\n  img,\r\n  type,\r\n  atk,\r\n  def,\r\n  descText,\r\n  hp,\r\n  id,\r\n  value,\r\n  onAttackCardClick,\r\n  onDefendingCardClick,\r\n  onClick,\r\n  active,\r\n  item,\r\n  playerClick,\r\n  setChosenAtk,\r\n  onPlayerClick\r\n}) => {\r\n \r\n  return (\r\n    <CardWrapper\r\n      value={value}\r\n      style={active ? { border: \"5px solid blue\" } : { border: \"\" }}\r\n      id={id}\r\n      onClick={(e) => {onClick(); onAttackCardClick(e)} }\r\n    >\r\n\r\n      <CardName>{name}</CardName>\r\n      <CardImg src={img} />\r\n      <Type>[{type}]</Type>\r\n      <AtkDefWrapper>\r\n        <Atk>Atk: {atk}</Atk>\r\n        <Def>Def: {def}</Def>\r\n      </AtkDefWrapper>\r\n      <DescriptionText>{descText}</DescriptionText>\r\n      <HPWrapper>\r\n        <HP>HP: {hp}</HP>\r\n      </HPWrapper>\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\nexport default CharacterCardBattleField;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCardBattleField.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\player\\Player.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\player\\PlayerElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCardBattleFieldElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCardBattleFieldElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCard.js",["176"],"import React, { useState } from \"react\";\r\n\r\nimport {\r\n  CardWrapper,\r\n  CardName,\r\n  CardImg,\r\n  AtkDefWrapper,\r\n  Atk,\r\n  Def,\r\n  DescriptionText,\r\n  Type,\r\n  CostHpWrapper,\r\n  HP,\r\n  Cost,\r\n  StyledShield,\r\n  StyledSword,\r\n  StyledHearth,\r\n  StyledCoin,\r\n  RightWrapper,\r\n  LeftWrapper,\r\n} from \"./CharacterCardElements\";\r\n\r\nconst CharacterCard = ({\r\n  name,\r\n  img,\r\n  type,\r\n  atk,\r\n  def,\r\n  descText,\r\n  hp,\r\n  id,\r\n  value,\r\n  cost,\r\n  cardsinhand,\r\n  onClick,\r\n  active,\r\n}) => {\r\n  return (\r\n    <>\r\n      <CardWrapper\r\n        value={value}\r\n        /*  style={active ? { border: \"5px solid blue\" } : { border: \"\" }} */\r\n        active={active}\r\n        id={id}\r\n        onClick={onClick}\r\n      >\r\n        <CardName>{name}</CardName>\r\n        <CardImg src={img} draggable={false} />\r\n        <Type>[{type}]</Type>\r\n        <AtkDefWrapper>\r\n          <LeftWrapper>\r\n            <StyledSword />\r\n            <Atk>{atk}</Atk>\r\n          </LeftWrapper>\r\n          <RightWrapper>\r\n            <StyledShield />\r\n            <Def>{def}</Def>\r\n          </RightWrapper>\r\n        </AtkDefWrapper>\r\n        <DescriptionText>{descText}</DescriptionText>\r\n        <CostHpWrapper>\r\n          <LeftWrapper>\r\n          <StyledCoin />\r\n          <Cost>{cost}</Cost>\r\n          </LeftWrapper>\r\n\r\n          <RightWrapper>\r\n          <StyledHearth />\r\n          <HP>{hp}</HP>\r\n          </RightWrapper>\r\n        </CostHpWrapper>\r\n      </CardWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCard.js",["177"],"import React, { useState } from \"react\";\r\nimport {\r\n  CardWrapper,\r\n  CardName,\r\n  CardImg,\r\n  DescriptionText,\r\n  Type,\r\n  CostWrapper,\r\n  Cost,\r\n  StyledCoin\r\n} from \"./SpellCardElements\";\r\n\r\nconst SpellCard = ({ name, img, type, descText, cost, value, id, active, onClick }) => {\r\n\r\n  return (\r\n    <>\r\n      <CardWrapper\r\n        id={id}\r\n        value={value}\r\n        active={active}\r\n        onClick={onClick}\r\n      >\r\n        <CardName>{name}</CardName>\r\n        <CardImg src={img} draggable={false} />\r\n        <Type>[{type}]</Type>\r\n        <DescriptionText>{descText}</DescriptionText>\r\n        <CostWrapper>\r\n        <StyledCoin /><Cost> {cost}</Cost>\r\n        </CostWrapper>\r\n      </CardWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SpellCard;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCardElements.js",["178","179"],"import styled, { css, keyframes } from \"styled-components\";\r\nimport CardBackground from \"../../Img/card-background-two.jpg\";\r\nimport GoldTexture from \"../../Img/gold-texture.jpg\";\r\nimport DescBack from \"../../Img/desc-back.jpg\";\r\nimport { after } from \"lodash\";\r\n\r\nimport { ReactComponent as Shield } from \"../../Img/defense.svg\";\r\nimport { ReactComponent as Sword } from \"../../Img/attack.svg\";\r\nimport { ReactComponent as Hearth } from \"../../Img/health.svg\";\r\nimport { ReactComponent as Coin } from \"../../Img/coin.svg\";\r\n\r\nexport const CardWrapper = styled.div`\r\n  height: 270px;\r\n  width: 170px;\r\n\r\n  border-radius: 10px;\r\n  border: 5px solid transparent;\r\n\r\n  border-image: url(${GoldTexture}) 1;\r\n\r\n  margin-left: 15px;\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: center;\r\n\r\n  box-shadow: 12px 10px 28px 3px #000;\r\n  background: Background;\r\n  background-image: url(${CardBackground});\r\n\r\n  background-color: #fff;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  margin-top: 100px;\r\n  position: relative;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    margin-top: 0px;\r\n  }\r\n\r\n  ${({ active }) =>\r\n    active &&\r\n    css`\r\n      border: 5px solid red;\r\n    `}\r\n`;\r\n\r\nexport const CardName = styled.h3`\r\n  z-index: 2;\r\n  margin-top: 2%;\r\n  margin-bottom: 1%;\r\n  color: #000;\r\n  font-family: \"Lobster\", cursive;\r\n`;\r\n\r\nexport const CardImg = styled.img`\r\n  margin-top: 0%;\r\n  height: 90px;\r\n  width: 130px;\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const Type = styled.p`\r\n  margin-top: 3%;\r\n  margin-bottom: 0%;\r\n  color: purple;\r\n`;\r\n\r\nexport const AtkDefWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  height: 20px;\r\n  width: 170px;\r\n  /* margin-top: 1%; */\r\n`;\r\n\r\nexport const LeftWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: 20px;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\nexport const RightWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  height: 20px;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport const Atk = styled.p`\r\n  font-family: 'Old Standard TT', serif;\r\n  font-weight: 800;\r\n  text-shadow: 1px 1px 1px #000;\r\n  color: green;\r\n  font-size: 1rem;\r\n`;\r\n\r\nexport const Def = styled.p`\r\n  font-family: 'Old Standard TT', serif;\r\n  font-weight: 800;\r\n  text-shadow: 1px 1px 1px #000;\r\n  color: #2F9DF3;\r\n  margin-right: 10px;\r\n  font-size: 1.1rem;\r\n`;\r\n\r\nexport const DescriptionText = styled.p`\r\n  font-family: \"EB Garamond\", serif;\r\n  font-weight: 700;\r\n\r\n  margin-top: 2%;\r\n  width: 150px;\r\n  max-height: 130px;\r\n  overflow: hidden;\r\n  padding: 5px;\r\n  margin-bottom: 0;\r\n  border: 1px solid black;\r\n  border-radius: 4px;\r\n  background: #fff;\r\n  background-image: url(${DescBack});\r\n  background-position: center; /* Center the image */\r\n  background-size: cover;\r\n  font-size: 0.7rem;\r\n`;\r\n\r\nexport const CostHpWrapper = styled.span`\r\n  margin-top: 5px;\r\n  width: 170px;\r\n  height: 20px;\r\n\r\n  display: flex;\r\n  flex-flow: row nowrap;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`;\r\n\r\nexport const HP = styled.p`\r\n  font-family: 'Old Standard TT', serif;\r\n  font-weight: 700;\r\n  height: 20px;\r\n  margin-right: 10px;\r\n  text-shadow: 1.5px 1.5px 1.5px #000;\r\n  color: #E81717;\r\n`;\r\n\r\nexport const Cost = styled.p`\r\n  font-family: 'Old Standard TT', serif;\r\n  font-weight: 700;\r\n  margin-left: 5px;\r\n  height: 20px;\r\n  text-shadow: 1.5px 1.5px 1.5px #000;\r\n  color: gold;\r\n`;\r\n\r\nexport const StyledShield = styled(Shield)`\r\n  width: 35%;\r\n  height: 100%;\r\n`;\r\nexport const StyledSword = styled(Sword)`\r\n  margin-left: 10px;\r\n  width: 35%;\r\n  height: 100%;\r\n`;\r\nexport const StyledHearth = styled(Hearth)`\r\n  width: 40%;\r\n  height: 100%;\r\n`;\r\nexport const StyledCoin = styled(Coin)`\r\n  margin-left: 10px;\r\n  width: 20%;\r\n  height: 100%;\r\n`;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCardElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\FunctionsComponent.js",["180","181","182","183","184","185","186","187","188","189"],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\OpponentBattleField.js",["190","191"],"import React, { useState } from \"react\";\r\nimport OppCharBattleField from \"../card/OppCharBattleField\";\r\nimport SpellCardBattleField from \"../card/SpellCardBattleField\";\r\nimport {\r\n  BattlefieldContainer,\r\n  BattlefieldInnerContainer,\r\n} from \"./OpponentBattleFieldElements\";\r\n\r\nconst OpponentBattleField = ({ opponentBattlefield, onDefendingCardClick, yourturn, chosenDefHigh, setChosenDefHigh }) => {\r\n\r\n\r\n  const highlightCard = (item) => {\r\n    if (!yourturn) {\r\n      return\r\n    }\r\n    if (item == chosenDefHigh) {\r\n      setChosenDefHigh()\r\n    } else {\r\n      setChosenDefHigh(item)\r\n    }\r\n  }\r\n\r\n  const CheckType = (item) => {\r\n    if (item.type === \"spell\") {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BattlefieldContainer>\r\n        <BattlefieldInnerContainer>\r\n          {opponentBattlefield.map(function (item, i) {\r\n            return CheckType(item) ? (\r\n              <div key={i}>\r\n                <OppCharBattleField\r\n                  /* highlight={highlight} */\r\n                  id={item.id}\r\n                  value={i}\r\n                  name={item.name}\r\n                  img={item.img}\r\n                  type={item.type}\r\n                  atk={item.atk}\r\n                  def={item.def}\r\n                  descText={item.descText}\r\n                  hp={item.hp}\r\n                  active={item === chosenDefHigh}\r\n                  onClick={() => highlightCard(item)}\r\n                  onDefendingCardClick={onDefendingCardClick}\r\n                />\r\n              </div>\r\n            ) : (\r\n                <div key={i}>\r\n                  <SpellCardBattleField\r\n                    id={item.id}\r\n                    key={i}\r\n                    name={item.name}\r\n                    img={item.img}\r\n                    type={item.type}\r\n                    descText={item.descText}\r\n                    cost={item.cost}\r\n                    onDefendingCardClick={onDefendingCardClick}\r\n                  />\r\n                </div>\r\n              );\r\n          })}\r\n        </BattlefieldInnerContainer>\r\n      </BattlefieldContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OpponentBattleField;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\opponent\\OpponentTurn.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\OpponentBattleFieldElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvasInterface\\CanvasInterfaceRender.js",["192","193","194","195","196","197","198","199","200","201"],"import React, { useState } from \"react\";\r\nimport {BrowserRouter as Router, Link, Route, Switch} from \"react-router-dom\";\r\nimport {\r\n  NotEnoughError,\r\n  EndTurnButton,\r\n  TurnInicator,\r\n} from \"../canvas/CanvasElements\";\r\nimport {\r\n  RightToolBarContainer,\r\n  Hpcontainer,\r\n  GoldStatus,\r\n  LeftToolBarContainer,\r\n} from \"../player/PlayerElements\";\r\n/* import { PlayCardButton, GoldStatus, LeftToolBarContainer } from \"./Player/PlayerElements\"; */\r\nimport {\r\n  OpponentDeckWrapper,\r\n  PlayerDeckWrapper,\r\n  VisualDeck,\r\n  OpponentCardsLeft,\r\n  PlayerCardsLeft,\r\n  AttackButton,\r\n  OpponentHpcontainer,\r\n  StyledSwords,\r\n  AttackText,\r\n  EnemyAvatar,\r\n  StyledGold,\r\n  BattleMove,\r\n  BattleMoveText,\r\n  StyledScroll,\r\n} from \"./CanvasInterfaceElements\";\r\nimport Settings from \"../settings/Settings\";\r\nimport useSound from \"use-sound\";\r\nimport swordSfx from \"../../music/sword.mp3\";\r\nimport enemySfx from \"../../music/arr.wav\";\r\nimport backMusic from \"../../music/background-music.mp3\";\r\n\r\nconst CanvasInterfaceRender = ({\r\n  endTurnFunc,\r\n  startGame,\r\n  enoughgold,\r\n  buttonShow,\r\n  whichTurn,\r\n  gold,\r\n  onPlayCard,\r\n  hp,\r\n  deck,\r\n  oppDeck,\r\n  attackingFunc,\r\n  opponentHp,\r\n  toggleEnemyTarget,\r\n  enemyTargeted,\r\n  round,\r\n  battleMove,\r\n  battlelog,\r\n  yourturn,\r\n}) => {\r\n  const [volume, setVolume] = useState(0.2);\r\n  const [sfxVolume, setSfxVolume] = useState(0.2);\r\n\r\n  const adjustVolume = (e) => {\r\n    \r\n\r\n    if (e.target.id == \"sfx-minus\") {\r\n      if (sfxVolume < 0.1) return\r\n    \r\n      setSfxVolume(sfxVolume - 0.1);\r\n      \r\n    } else if (e.target.id == \"sfx-plus\") {\r\n\r\n      if (sfxVolume > 0.9) return\r\n      setSfxVolume(sfxVolume + 0.1);\r\n      \r\n    } else if (e.target.id == \"volume-plus\") {\r\n      \r\n      if (volume > 0.9) return;\r\n      setVolume(volume + 0.1);\r\n\r\n    } else if (e.target.id == \"volume-minus\") {\r\n\r\n      if (volume < 0.1) return;\r\n      setVolume(volume - 0.1);\r\n      \r\n    }\r\n  };\r\n\r\n  const [swordTimeOut, setSwordTimeOut] = useState(true)\r\n  const [enemyTimeOut, setEnemyTimeOut] = useState(true)\r\n\r\n  const SwordHover = () => {\r\n    if (swordTimeOut) {\r\n      swordSound()\r\n      setSwordTimeOut(false)\r\n      setTimeout(() => {\r\n        setSwordTimeOut(true)\r\n      }, 5000)\r\n    }\r\n  }\r\n  const EnemyHover = () => {\r\n    if (enemyTimeOut) {\r\n      enemySound()\r\n      setEnemyTimeOut(false)\r\n      setTimeout(() => {\r\n        setEnemyTimeOut(true)\r\n      }, 8000)\r\n    }\r\n  }\r\n\r\n  const [swordSound] = useSound(swordSfx, { volume: sfxVolume });\r\n  const [enemySound] = useSound(enemySfx, { volume: sfxVolume });\r\n\r\n  \r\n  const [play, { stop, isPlaying }] = useSound(backMusic, { volume: volume });\r\n\r\n  return (\r\n    <>\r\n      <Settings active={isPlaying} play={play} stop={stop} volume={volume} sfxVolume={sfxVolume} adjustVolume={adjustVolume} />\r\n      <BattleMove>\r\n        {battlelog.map((item, i) => {\r\n          if (item.typeTwo === \"character\") {\r\n            return (\r\n              <BattleMoveText key={i}>\r\n                {item.whoPlayed} played {item.name}\r\n              </BattleMoveText>\r\n            );\r\n          } else {\r\n            return (\r\n              <BattleMoveText key={i}>\r\n                {item.type === \"spell\" || item.typeTwo === \"spell\"\r\n                  ? `${item.whoPlayed} casted ${item.name}`\r\n                  : `${item.attacker} attacked ${item.deffender}`}\r\n              </BattleMoveText>\r\n            );\r\n          }\r\n        })}\r\n      </BattleMove>\r\n\r\n      <OpponentDeckWrapper>\r\n        <VisualDeck>\r\n          <OpponentCardsLeft>{oppDeck.length}</OpponentCardsLeft>\r\n        </VisualDeck>\r\n      </OpponentDeckWrapper>\r\n      <PlayerDeckWrapper>\r\n        <VisualDeck>\r\n          <PlayerCardsLeft>{deck.length}</PlayerCardsLeft>\r\n        </VisualDeck>\r\n      </PlayerDeckWrapper>\r\n\r\n      <LeftToolBarContainer>\r\n        <GoldStatus>\r\n          {gold} <StyledGold />\r\n        </GoldStatus>\r\n      </LeftToolBarContainer>\r\n\r\n      <EndTurnButton onClick={endTurnFunc}>End Turn</EndTurnButton>\r\n\r\n      <NotEnoughError\r\n        style={enoughgold ? { display: \"block\" } : { display: \"none\" }}\r\n      >\r\n        Not Enough Gold!\r\n      </NotEnoughError>\r\n\r\n      <EnemyAvatar\r\n        onMouseEnter={() => EnemyHover()}\r\n        style={\r\n          !enemyTargeted\r\n            ? { filter: \"brightness(75%) contrast(150%)\" }\r\n            : { filter: \"brightness(50%) contrast(150%)\" }\r\n        }\r\n        onClick={toggleEnemyTarget}\r\n      />\r\n      <OpponentHpcontainer>{opponentHp}</OpponentHpcontainer>\r\n\r\n      <AttackText>Attack!</AttackText>\r\n      <StyledSwords onMouseEnter={() => SwordHover()} onClick={attackingFunc} />\r\n\r\n      <RightToolBarContainer>\r\n        <Hpcontainer>{hp}</Hpcontainer>\r\n      </RightToolBarContainer>\r\n\r\n      <TurnInicator font=\"1.7rem\" left=\"30px\" top=\"45px\">\r\n        {whichTurn}\r\n      </TurnInicator>\r\n      <TurnInicator font=\"3rem\" left=\"30px\" top=\"-35px\">\r\n        Round {round}\r\n      </TurnInicator>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CanvasInterfaceRender;\r\n\r\n/*\r\nconst StyledSwords = styled(Swords)`\r\n  position: absolute;\r\n  z-index: 999;\r\n  bottom: 6.2%;\r\n  right: 28%;\r\n  height: 5rem;\r\n  width: 5rem;\r\n  cursor: pointer;\r\n` */\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsHand\\OpponentCardsHandRender.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsHand\\CardsHand.js",["202","203"],"import React, { useState } from 'react'\r\nimport CharacterCard from \"../card/CharacterCard\";\r\nimport SpellCard from \"../card/SpellCard\";\r\n\r\nconst CardsHand = ({ cardsinhand, CheckType, onCardClick, selCardHand, setSelCardHand, yourturn }) => {\r\n\r\n    const highlightCard = (item) => {\r\n        if (!yourturn) {\r\n            return\r\n        }\r\n        if (item == selCardHand) {\r\n            setSelCardHand()\r\n        } else {\r\n            setSelCardHand(item)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {cardsinhand.map(function (item, i) {\r\n                return CheckType(item) ? (\r\n                    <div key={i} onClick={onCardClick}>\r\n                        <CharacterCard\r\n                            id={item.id}\r\n                            value={i}\r\n                            name={item.name}\r\n                            img={item.img}\r\n                            type={item.type}\r\n                            atk={item.atk}\r\n                            def={item.def}\r\n                            descText={item.descText}\r\n                            hp={item.hp}\r\n                            cost={item.cost}\r\n                            cardsinhand={cardsinhand}\r\n                            active={item === selCardHand}\r\n                            onClick={() => highlightCard(item)}\r\n                        />\r\n                    </div>\r\n                ) : (\r\n                        <div key={i} onClick={onCardClick}>\r\n                            <SpellCard\r\n                                id={item.id}\r\n                                key={i}\r\n                                name={item.name}\r\n                                img={item.img}\r\n                                type={item.type}\r\n                                descText={item.descText}\r\n                                cost={item.cost}\r\n                                active={item === selCardHand}\r\n                                onClick={() => highlightCard(item)}\r\n                            />\r\n                        </div>\r\n                    );\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardsHand","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsHand\\OpponentCardsHand.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsHand\\OpponentCardsHandElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\player\\LeftToolBar.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsarray\\OpponentCardArray.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\Spelleffects\\Spells.js",["204"],"import OpponentCardsHand from \"../cardsHand/OpponentCardsHand\";\r\n\r\nexport const DrawOneCard = (arr, cardsInHand) => {\r\n  if (cardsInHand > 4) {\r\n    arr.splice(0, 1);\r\n    return;\r\n  } else {\r\n    let card = arr[0];\r\n    arr.splice(0, 1);\r\n    cardsInHand.push(card);\r\n  }\r\n};\r\n\r\nexport const DrawThreeCards = (arr, cardsInHand) => {\r\n  if (cardsInHand > 4) {\r\n    arr.splice(0, 3);\r\n    return;\r\n  } else {\r\n    for(let i = 0; i < 3; i++){\r\n      if(cardsInHand.length > 5){\r\n        return;\r\n      } else {\r\n        let card = arr[0]\r\n        cardsInHand.push(card);\r\n        arr.splice(0, 1)\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const HealEveryCard = (arr) => {\r\n  for (let i = 0; i < arr.length; i++) {\r\n    let newHp = arr[i].hp + 50;\r\n\r\n    if (newHp > 100) {\r\n      let remainHp = newHp - 100;\r\n      let newHp2 = newHp - remainHp;\r\n      arr[i].hp = newHp2;\r\n    } else {\r\n      arr[i].hp = newHp;\r\n    }\r\n\r\n    let newDef = arr[i].def + 100;\r\n    arr[i].def = newDef;\r\n  }\r\n};\r\n\r\nexport const tp1 = (selectedCard) => {\r\n  let newAtk = selectedCard.atk + 200;\r\n  selectedCard.atk = newAtk;\r\n  if (selectedCard.name.includes(\"scrum-master\")) {\r\n    return;\r\n  } else {\r\n    let newName = selectedCard.name + \" scrum-master\";\r\n    selectedCard.name = newName;\r\n  }\r\n};\r\n\r\nexport const harmonica = (arr) => {\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (arr[i].def > 200) {\r\n      let newDef = arr[i].def - 200;\r\n      arr[i].def = newDef;\r\n    } else if (arr[i].def <= 200) {\r\n      let newHp = arr[i].hp - 200;\r\n      arr[i].hp = newHp;\r\n    }\r\n  }\r\n};\r\n\r\nexport const jonLevelTwo = (battlefield, hand, deck) => {\r\n  //First battlefield\r\n  for (let i = 0; i < battlefield.length; i++) {\r\n    if (battlefield[i].name === \"Jon\" || battlefield[i].name === \"Jon scrum-master\" ) {\r\n      let newAtk = battlefield[i].atk + 500;\r\n      battlefield[i].atk = newAtk;\r\n\r\n      let newDef = battlefield[i].def + 300;\r\n      battlefield[i].def = newDef;\r\n\r\n      let newName = battlefield[i].name + \" Level Two\";\r\n      battlefield[i].name = newName;\r\n    } else {\r\n      console.log(\"Nothing\");\r\n    }\r\n  }\r\n\r\n  //Second hand\r\n  for (let i = 0; i < hand.length; i++) {\r\n    if (hand[i].name === \"Jon\" || hand[i].name === \"Jon scrum-master\") {\r\n      let newAtk = hand[i].atk + 500;\r\n      hand[i].atk = newAtk;\r\n\r\n      let newDef = hand[i].def + 300;\r\n      hand[i].def = newDef;\r\n\r\n      let newName = hand[i].name + \" Level Two\";\r\n      hand[i].name = newName;\r\n    } else {\r\n      console.log(\"Nothing\");\r\n    }\r\n  }\r\n\r\n  //Third deck\r\n  for (let i = 0; i < deck.length; i++) {\r\n    if (deck[i].name === \"Jon\" || deck[i].name === \"Jon scrum-master\") {\r\n      let newAtk = deck[i].atk + 500;\r\n      deck[i].atk = newAtk;\r\n\r\n      let newDef = deck[i].def + 300;\r\n      deck[i].def = newDef;\r\n\r\n      let newName = deck[i].name + \" Level Two\";\r\n      deck[i].name = newName;\r\n    } else {\r\n      console.log(\"Nothing\");\r\n    }\r\n  }\r\n};\r\n\r\nexport const coffee = (battlefield, hand) => {\r\n  //First battlefield\r\n  for (let i = 0; i < battlefield.length; i++) {\r\n    if (battlefield[i].type === \"Programmer\") {\r\n      let newAtk = battlefield[i].atk + 250;\r\n      battlefield[i].atk = newAtk;\r\n\r\n      let newDef = battlefield[i].def + 150;\r\n      battlefield[i].def = newDef;\r\n    } else {\r\n      console.log(\"Nothing\");\r\n    }\r\n  }\r\n\r\n  //Second hand\r\n  for (let i = 0; i < hand.length; i++) {\r\n    if (hand[i].type === \"Programmer\") {\r\n      let newAtk = hand[i].atk + 250;\r\n      hand[i].atk = newAtk;\r\n\r\n      let newDef = hand[i].def + 150;\r\n      hand[i].def = newDef;\r\n    } else {\r\n      console.log(\"Nothing\");\r\n    }\r\n  }\r\n};\r\n\r\nexport const error = (arr) => {\r\n  let select = Math.floor(Math.random() * Math.floor(arr.length));\r\n\r\n  if (arr[select].def > 600) {\r\n    let newDef = arr[select].def - 600;\r\n    arr[select].def = newDef;\r\n  } else if ((arr[select].def = 600)) {\r\n    let newHp = arr[select].hp - 600;\r\n    arr[select].hp = newHp;\r\n  } else if (arr[select].def < 600) {\r\n    let remainDmg = 600 - arr[select].def;\r\n    let newCardHp = arr[select].hp - remainDmg;\r\n    arr[select].hp = newCardHp;\r\n    arr[select].def = 0;\r\n  }\r\n};\r\n\r\nexport const goldenInstrument = (arr) => {\r\n  for(let i = 0; i < arr.length; i++){\r\n    if(arr[i].name === \"Gutenberg Mariachi\"){\r\n      let newDef = arr[i].def + 650;\r\n      arr[i].def = newDef;\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\nexport const mariachiOnPlay = (arr) => {\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (arr[i].def > 150) {\r\n      let newDef = arr[i].def - 150;\r\n      arr[i].def = newDef;\r\n    } else if (arr[i].def <= 150) {\r\n      let newHp = arr[i].hp - 150;\r\n      arr[i].hp = newHp;\r\n    }\r\n  }\r\n};\r\n\r\nexport const jesperOnPlay = (arr, card) => {\r\n\r\n  let attack = 0;\r\n  for (let i = 0; i < arr.length; i++){\r\n    if(arr[i].type === \"Programmer\"){\r\n      attack += 100;\r\n    }\r\n  }\r\n  \r\n  let newAtk = attack;\r\n  let newCardAtk = card.atk + newAtk;\r\n  card.atk = newCardAtk\r\n\r\n};\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\Spelleffects\\SpellShowRender.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\OppCharBattleField.js",["205"],"import React, { useState } from \"react\";\r\n/* import SelectReducer from \"./SelectReducer\"; */\r\nimport {\r\n  CardWrapper,\r\n  CardName,\r\n  CardImg,\r\n  AtkDefWrapper,\r\n  Atk,\r\n  Def,\r\n  DescriptionText,\r\n  Type,\r\n  HPWrapper,\r\n  HP,\r\n} from \"./CharacterCardBattleFieldElements\";\r\n\r\n\r\nconst OppCharBattleField = ({\r\n  name,\r\n  img,\r\n  type,\r\n  atk,\r\n  def,\r\n  descText,\r\n  hp,\r\n  id,\r\n  value,\r\n  onDefendingCardClick,\r\n  active,\r\n  onClick\r\n}) => {\r\n  // onDefendingCardClick || setChosen\r\n  return (\r\n    <CardWrapper\r\n      value={value}\r\n      style={active ? { border: \"5px solid red\" } : { border: \"\" }}\r\n      id={id}\r\n      onClick={(e) => {onClick(); onDefendingCardClick(e)} }\r\n    >\r\n\r\n      <CardName>{name}</CardName>\r\n      <CardImg src={img} />\r\n      <Type>[{type}]</Type>\r\n      <AtkDefWrapper>\r\n        <Atk>Atk: {atk}</Atk>\r\n        <Def>Def: {def}</Def>\r\n      </AtkDefWrapper>\r\n      <DescriptionText>{descText}</DescriptionText>\r\n      <HPWrapper>\r\n        <HP>HP: {hp}</HP>\r\n      </HPWrapper>\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\nexport default OppCharBattleField;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvasInterface\\CanvasInterfaceElements.js",["206"],"import styled, { keyframes } from \"styled-components\";\r\nimport { ReactComponent as Swords } from \"../../Img/swords.svg\";\r\nimport { ReactComponent as Enemy } from \"../../Img/enemy.svg\";\r\nimport GoldTexture from \"../../Img/gold-texture.jpg\";\r\nimport CardBack from \"../../Img/card-deck-back.png\";\r\nimport { ReactComponent as Scroll } from \"../../Img/scroll.svg\";\r\nimport { ReactComponent as Gold } from \"../../Img/coin.svg\";\r\n\r\nexport const OpponentDeckWrapper = styled.div`\r\n  position: absolute;\r\n  right: 1%;\r\n  top: 16%;\r\n`;\r\nexport const PlayerDeckWrapper = styled.div`\r\n  position: absolute;\r\n  right: 1%;\r\n  bottom: 22%;\r\n`;\r\n\r\nexport const PlayerCardsLeft = styled.span`\r\n  font-family: \"Old Standard TT\", serif;\r\n  font-size: 3rem;\r\n  color: gold;\r\n`;\r\nexport const OpponentCardsLeft = styled.span`\r\n  font-family: \"Old Standard TT\", serif;\r\n  font-size: 3rem;\r\n  color: gold;\r\n`;\r\n\r\nexport const VisualDeck = styled.div`\r\n  width: 140px;\r\n  height: 200px;\r\n  margin: 10px;\r\n  background: red;\r\n\r\n  border: 5px solid transparent;\r\n  border-image: url(${GoldTexture}) 1;\r\n  /* box-shadow: 15px 15px 35px 5px #000; */\r\n  border-radius: 10px;\r\n\r\n  background: Background;\r\n  background-image: url(${CardBack});\r\n  background-color: #fff;\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const AttackButton = styled.button`\r\n  /*  position: absolute;\r\n  right: 0;\r\n  bottom: 0; */\r\n`;\r\n\r\nexport const OpponentHpcontainer = styled.button`\r\n  position: absolute;\r\n  top: 2%;\r\n  right: 10.5%;\r\n  width: 100px;\r\n  height: 100px;\r\n  background: none;\r\n  margin-bottom: 50px;\r\n  border: 3px solid red;\r\n  border-radius: 50px;\r\n  font-size: 2rem;\r\n  font-family: \"Lobster\", cursive;\r\n  color: red;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nexport const AttackText = styled.p`\r\n  position: absolute;\r\n  font-family: \"Lobster\", cursive;\r\n  font-size: 2rem;\r\n  bottom: 13.5%;\r\n  right: 18%;\r\n`;\r\nconst MoveSword = keyframes`\r\n  from {\r\n    transform: rotateX(0deg);\r\n  }\r\n  to {\r\n    transform: rotateX(10deg);\r\n  }\r\n`;\r\nexport const StyledSwords = styled(Swords)`\r\n  position: absolute;\r\n  z-index: 999;\r\n  bottom: 6.2%;\r\n  right: 18%;\r\n  height: 5rem;\r\n  width: 5rem;\r\n  cursor: pointer;\r\n  animation: ${MoveSword} infinite 5s linear;\r\n`;\r\nexport const EnemyAvatar = styled(Enemy)`\r\n  position: absolute;\r\n  top: 2%;\r\n  left: 23%;\r\n  width: 7%;\r\n  height: 150px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const StyledGold = styled(Gold)`\r\n  position: absolute;\r\n  top: 25%;\r\n  left: 115%;\r\n  width: 50px;\r\n  height: 40%;\r\n`;\r\n\r\nexport const BattleMove = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  /*   justify-content: center; */\r\n\r\n  left: 1%;\r\n  top: 15%;\r\n  width: 14%;\r\n  height: 60%;\r\n  overflow: hidden;\r\n  border: 5px solid transparent;\r\n  border-image: url(${GoldTexture}) 1;\r\n`;\r\n\r\nexport const BattleMoveText = styled.h3`\r\n  font-family: \"Lobster\", cursive;\r\n  font-weight: lighter;\r\n  font-size: 1.1rem;\r\n  color: #000;\r\n`;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\Spelleffects\\SpellShowCard.js",["207","208","209"],"import React, { useState } from \"react\";\r\nimport {\r\n  CardWrapper,\r\n  CardName,\r\n  CardImg,\r\n  DescriptionText,\r\n  Type,\r\n  CostWrapper,\r\n  Cost,\r\n} from \"./SpellShowCardElements\";\r\n\r\nconst SpellShowCard = ({ name, img, type, descText, cost, value, id }) => {\r\n  //style={highlight ? { border: '3px solid red'} : { border: 'none'} } onClick={onCardClick}\r\n/* \r\n  const [highlight, setHighlight] = useState(false);\r\n\r\n  const onCardClick = () => {\r\n    setHighlight(!highlight);\r\n  }; */\r\n\r\n  return (\r\n    <>\r\n      <CardWrapper\r\n        id={id}\r\n        value={value}\r\n      /*   style={highlight ? { border: \"5px solid yellow\" } : { border: \"\" }} */\r\n  /*       onClick={onCardClick} */\r\n      >\r\n        {/* <button style={highlight ? buttonStyle : {display: \"none\"}}>Play card?</button> */}\r\n        <CardName>{name}</CardName>\r\n        <CardImg src={img} draggable={false} />\r\n        <Type>[{type}]</Type>\r\n        <DescriptionText>{descText}</DescriptionText>\r\n      {/*   <CostWrapper>\r\n          <Cost>Cost: {cost}</Cost>\r\n        </CostWrapper> */}\r\n      </CardWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SpellShowCard;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\Spelleffects\\SpellShowCardElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\settings\\Settings.js",["210"],"import React, { useState } from \"react\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport { SettingsCanvas, VolumeBtn, MusicBtn, BtnLabel } from \"./SettingsElements\";\r\n\r\nconst Settings = ({ adjustVolume, play, stop, active }) => {\r\n  const [isPlaying, setIsPlaying] = useState(false)\r\n  const StopPlayMusic = () => {\r\n    if(isPlaying){\r\n      stop()\r\n      setIsPlaying(false)\r\n    } else {\r\n      play()\r\n      setIsPlaying(true)\r\n    }\r\n   \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <SettingsCanvas>\r\n        <BtnLabel>Music</BtnLabel>\r\n        <br />\r\n        <VolumeBtn id=\"volume-plus\" onClick={(e) => adjustVolume(e)}> + </VolumeBtn>\r\n        <VolumeBtn id=\"volume-minus\" onClick={(e) => adjustVolume(e)}> - </VolumeBtn>\r\n        <br />\r\n        <BtnLabel>SFX</BtnLabel>\r\n        <br />\r\n        <VolumeBtn id=\"sfx-plus\" onClick={(e) => adjustVolume(e)}> + </VolumeBtn>\r\n        <VolumeBtn id=\"sfx-minus\" onClick={(e) => adjustVolume(e)}> - </VolumeBtn>\r\n        <br />\r\n        <MusicBtn onClick={StopPlayMusic} active={active}>{!isPlaying ? 'Play Music' : 'Stop Music'}</MusicBtn>\r\n      </SettingsCanvas>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\settings\\SettingsElements.js",[],{"ruleId":"211","severity":1,"message":"212","line":4,"column":34,"nodeType":"213","messageId":"214","endLine":4,"endColumn":38},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"211","severity":1,"message":"219","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"221","line":15,"column":14,"nodeType":"222","messageId":"223","endLine":15,"endColumn":16},{"ruleId":"211","severity":1,"message":"224","line":10,"column":3,"nodeType":"213","messageId":"214","endLine":10,"endColumn":13},{"ruleId":"211","severity":1,"message":"225","line":29,"column":10,"nodeType":"213","messageId":"214","endLine":29,"endColumn":20},{"ruleId":"211","severity":1,"message":"226","line":78,"column":10,"nodeType":"213","messageId":"214","endLine":78,"endColumn":19},{"ruleId":"211","severity":1,"message":"227","line":78,"column":21,"nodeType":"213","messageId":"214","endLine":78,"endColumn":33},{"ruleId":"211","severity":1,"message":"228","line":82,"column":10,"nodeType":"213","messageId":"214","endLine":82,"endColumn":18},{"ruleId":"220","severity":1,"message":"221","line":100,"column":20,"nodeType":"222","messageId":"223","endLine":100,"endColumn":22},{"ruleId":"220","severity":1,"message":"221","line":131,"column":30,"nodeType":"222","messageId":"223","endLine":131,"endColumn":32},{"ruleId":"220","severity":1,"message":"221","line":131,"column":59,"nodeType":"222","messageId":"223","endLine":131,"endColumn":61},{"ruleId":"220","severity":1,"message":"221","line":220,"column":18,"nodeType":"222","messageId":"223","endLine":220,"endColumn":20},{"ruleId":"211","severity":1,"message":"219","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"219","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"219","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"229","line":1,"column":23,"nodeType":"213","messageId":"214","endLine":1,"endColumn":32},{"ruleId":"211","severity":1,"message":"230","line":5,"column":10,"nodeType":"213","messageId":"214","endLine":5,"endColumn":15},{"ruleId":"211","severity":1,"message":"231","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":19},{"ruleId":"211","severity":1,"message":"232","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":27},{"ruleId":"211","severity":1,"message":"233","line":21,"column":3,"nodeType":"213","messageId":"214","endLine":21,"endColumn":20},{"ruleId":"211","severity":1,"message":"234","line":26,"column":5,"nodeType":"213","messageId":"214","endLine":26,"endColumn":22},{"ruleId":"220","severity":1,"message":"221","line":105,"column":18,"nodeType":"222","messageId":"223","endLine":105,"endColumn":20},{"ruleId":"220","severity":1,"message":"221","line":121,"column":18,"nodeType":"222","messageId":"223","endLine":121,"endColumn":20},{"ruleId":"220","severity":1,"message":"221","line":209,"column":18,"nodeType":"222","messageId":"223","endLine":209,"endColumn":20},{"ruleId":"220","severity":1,"message":"221","line":398,"column":18,"nodeType":"222","messageId":"223","endLine":398,"endColumn":20},{"ruleId":"235","severity":1,"message":"236","line":508,"column":7,"nodeType":"237","messageId":"238","endLine":511,"endColumn":15},{"ruleId":"239","severity":1,"message":"240","line":763,"column":6,"nodeType":"241","endLine":763,"endColumn":8,"suggestions":"242"},{"ruleId":"211","severity":1,"message":"219","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"221","line":16,"column":14,"nodeType":"222","messageId":"223","endLine":16,"endColumn":16},{"ruleId":"211","severity":1,"message":"243","line":2,"column":26,"nodeType":"213","messageId":"214","endLine":2,"endColumn":32},{"ruleId":"211","severity":1,"message":"212","line":2,"column":34,"nodeType":"213","messageId":"214","endLine":2,"endColumn":38},{"ruleId":"211","severity":1,"message":"244","line":2,"column":40,"nodeType":"213","messageId":"214","endLine":2,"endColumn":45},{"ruleId":"211","severity":1,"message":"245","line":2,"column":47,"nodeType":"213","messageId":"214","endLine":2,"endColumn":53},{"ruleId":"211","severity":1,"message":"246","line":21,"column":3,"nodeType":"213","messageId":"214","endLine":21,"endColumn":15},{"ruleId":"211","severity":1,"message":"247","line":29,"column":3,"nodeType":"213","messageId":"214","endLine":29,"endColumn":15},{"ruleId":"220","severity":1,"message":"221","line":63,"column":21,"nodeType":"222","messageId":"223","endLine":63,"endColumn":23},{"ruleId":"220","severity":1,"message":"221","line":68,"column":28,"nodeType":"222","messageId":"223","endLine":68,"endColumn":30},{"ruleId":"220","severity":1,"message":"221","line":73,"column":28,"nodeType":"222","messageId":"223","endLine":73,"endColumn":30},{"ruleId":"220","severity":1,"message":"221","line":78,"column":28,"nodeType":"222","messageId":"223","endLine":78,"endColumn":30},{"ruleId":"211","severity":1,"message":"219","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"220","severity":1,"message":"221","line":11,"column":18,"nodeType":"222","messageId":"223","endLine":11,"endColumn":20},{"ruleId":"211","severity":1,"message":"248","line":1,"column":8,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"219","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"249","line":6,"column":28,"nodeType":"213","messageId":"214","endLine":6,"endColumn":34},{"ruleId":"211","severity":1,"message":"219","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"250","line":8,"column":3,"nodeType":"213","messageId":"214","endLine":8,"endColumn":14},{"ruleId":"211","severity":1,"message":"251","line":9,"column":3,"nodeType":"213","messageId":"214","endLine":9,"endColumn":7},{"ruleId":"211","severity":1,"message":"252","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":13},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["253"],"no-negated-in-lhs",["254"],"'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'MuteButton' is defined but never used.","'BattleMove' is defined but never used.","'chosenDef' is assigned a value but never used.","'setChosenDef' is assigned a value but never used.","'lostgame' is assigned a value but never used.","'keyframes' is defined but never used.","'after' is defined but never used.","'BattleField' is defined but never used.","'OpponentBattleField' is defined but never used.","'startOpponentTurn' is defined but never used.","'opponentBattleArr' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'makeOpponentDeck'. Either include it or remove the dependency array.","ArrayExpression",["255"],"'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'AttackButton' is defined but never used.","'StyledScroll' is defined but never used.","'OpponentCardsHand' is defined but never used.","'Scroll' is defined but never used.","'CostWrapper' is defined but never used.","'Cost' is defined but never used.","'act' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"256","fix":"257"},"Update the dependencies array to be: [makeOpponentDeck]",{"range":"258","text":"259"},[20625,20627],"[makeOpponentDeck]"]