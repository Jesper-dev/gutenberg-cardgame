[{"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\index.js":"1","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\App.js":"2","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\reducers\\index.js":"3","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\reducers\\counter.js":"4","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\reducers\\isLogged.js":"5","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCard.js":"6","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCardElements.js":"7","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCard.js":"8","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCardElements.js":"9","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvas\\Canvas.js":"10","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvas\\CanvasElements.js":"11","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\player\\Player.js":"12","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\BattleField.js":"13","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsarray\\CardArray.js":"14","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\player\\PlayerElements.js":"15","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\BattleFieldElements.js":"16","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCardBattleField.js":"17","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCardBattleFieldElements.js":"18","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCardBattleField.js":"19","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCardBattleFieldElements.js":"20"},{"size":479,"mtime":1611044291424,"results":"21","hashOfConfig":"22"},{"size":443,"mtime":1611051243809,"results":"23","hashOfConfig":"22"},{"size":258,"mtime":1611043813065,"results":"24","hashOfConfig":"22"},{"size":283,"mtime":1611063435183,"results":"25","hashOfConfig":"22"},{"size":224,"mtime":1611043858231,"results":"26","hashOfConfig":"22"},{"size":1670,"mtime":1611069833362,"results":"27","hashOfConfig":"22"},{"size":1447,"mtime":1611069834067,"results":"28","hashOfConfig":"22"},{"size":1232,"mtime":1611067872361,"results":"29","hashOfConfig":"22"},{"size":1101,"mtime":1611069846910,"results":"30","hashOfConfig":"22"},{"size":3681,"mtime":1611075230747,"results":"31","hashOfConfig":"22"},{"size":277,"mtime":1611075059036,"results":"32","hashOfConfig":"22"},{"size":1099,"mtime":1611067379491,"results":"33","hashOfConfig":"22"},{"size":1659,"mtime":1611069853134,"results":"34","hashOfConfig":"22"},{"size":3034,"mtime":1611073238570,"results":"35","hashOfConfig":"22"},{"size":598,"mtime":1611070093059,"results":"36","hashOfConfig":"22"},{"size":255,"mtime":1611069313085,"results":"37","hashOfConfig":"22"},{"size":1703,"mtime":1611069701742,"results":"38","hashOfConfig":"22"},{"size":1446,"mtime":1611069795303,"results":"39","hashOfConfig":"22"},{"size":1243,"mtime":1611069945081,"results":"40","hashOfConfig":"22"},{"size":1100,"mtime":1611069972687,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"103feb",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"45"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\index.js",["91"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {createStore, combineReducers} from 'redux';\r\nimport allReducer from './reducers'\r\nimport { Provider } from 'react-redux';\r\n\r\nconst store = createStore(allReducer,\r\n     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n     )\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n    ,\r\n    document.querySelector('#root')\r\n)",["92","93"],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\App.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\reducers\\index.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\reducers\\counter.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\reducers\\isLogged.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCard.js",["94","95","96","97","98","99"],"import React, { useState } from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { createStore, store } from \"redux\";\r\n/* import SelectReducer from \"./SelectReducer\"; */\r\nimport {\r\n  CardWrapper,\r\n  CardName,\r\n  CardImg,\r\n  AtkDefWrapper,\r\n  Atk,\r\n  Def,\r\n  DescriptionText,\r\n  Type,\r\n  HPWrapper,\r\n  HP,\r\n} from \"./CharacterCardElements\";\r\nimport Player from \"../player/Player\";\r\n\r\nconst CharacterCard = ({\r\n  name,\r\n  img,\r\n  type,\r\n  atk,\r\n  def,\r\n  descText,\r\n  hp,\r\n  id,\r\n  value,\r\n}) => {\r\n  let array = [];\r\n  const [highlight, setHighlight] = useState(false);\r\n\r\n  const onCardClick = (e) => {\r\n    setHighlight(!highlight);\r\n  };\r\n\r\n  const checkIfAlone = (array) => {\r\n    if (array.length < 1) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // style={highlight ? { border: '4px solid yellow'} : { border: 'none'} }\r\n  return (\r\n    <CardWrapper\r\n      value={value}\r\n      style={highlight ? { border: \"2px solid red\" } : { border: \"none\" }}\r\n      id={id}\r\n      onClick={onCardClick}\r\n    >\r\n      {/* <button onClick={onPlayCard} style={highlight ? buttonStyle : {display: \"none\"}}>Play card?</button> */}\r\n      <CardName>{name}</CardName>\r\n      <CardImg src={img} />\r\n      <Type>[{type}]</Type>\r\n      <AtkDefWrapper>\r\n        <Atk>Atk: {atk}</Atk>\r\n        <Def>Def: {def}</Def>\r\n      </AtkDefWrapper>\r\n      <DescriptionText>{descText}</DescriptionText>\r\n      <HPWrapper>\r\n        <HP>HP: {hp}</HP>\r\n      </HPWrapper>\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\n// const buttonStyle = {\r\n//     padding: \"5px 5px\",\r\n//     background: \"none\",\r\n//     border: \"1px solid black\"\r\n// }\r\n\r\nexport default CharacterCard;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCardElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCard.js",["100","101","102"],"import React, { useState } from \"react\";\r\nimport {\r\n  CardWrapper,\r\n  CardName,\r\n  CardImg,\r\n  DescriptionText,\r\n  Type,\r\n  CostWrapper,\r\n  Cost,\r\n} from \"./SpellCardElements\";\r\n\r\nconst SpellCard = ({ name, img, type, descText, cost, value, id }) => {\r\n  //style={highlight ? { border: '3px solid red'} : { border: 'none'} } onClick={onCardClick}\r\n\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [inPlay, setInPlay] = useState([]);\r\n\r\n  const onCardClick = () => {\r\n    setHighlight(!highlight);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CardWrapper\r\n        id={id}\r\n        value={value}\r\n        style={highlight ? { border: \"2px solid yellow\" } : { border: \"none\" }}\r\n        onClick={onCardClick}\r\n      >\r\n        {/* <button style={highlight ? buttonStyle : {display: \"none\"}}>Play card?</button> */}\r\n        <CardName>{name}</CardName>\r\n        <CardImg src={img} />\r\n        <Type>[{type}]</Type>\r\n        <DescriptionText>{descText}</DescriptionText>\r\n        <CostWrapper>\r\n          <Cost>Cost: {cost}</Cost>\r\n        </CostWrapper>\r\n      </CardWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst buttonStyle = {\r\n  padding: \"5px 5px\",\r\n  background: \"none\",\r\n  border: \"1px solid black\",\r\n};\r\n\r\nexport default SpellCard;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCardElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvas\\Canvas.js",["103","104","105","106","107"],"import React, { useState, useEffect } from \"react\";\r\nimport { CanvasWrapper, StartGameButton } from \"./CanvasElements\";\r\nimport BattleField from \"../battlefield/BattleField\";\r\nimport Player from \"../player/Player\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  CardContainer,\r\n  PlayerFiledContainer,\r\n  PlayCardButton,\r\n  GoldStatus,\r\n  LeftToolBarContainer,\r\n} from \"../player/PlayerElements\";\r\n\r\nimport CharacterCard from \"../card/CharacterCard\";\r\nimport SpellCard from \"../card/SpellCard\";\r\n// import { CardsArray } from '../cardsarray/CardArray'\r\n\r\nconst Canvas = ({ array }) => {\r\n  const [cards, setCards] = useState([]);\r\n  const [playercards, setPlayerCards] = useState([]);\r\n\r\n  const [buttonShow, setButtonShow] = useState(true);\r\n  const [highlight, setHighlight] = useState(false);\r\n\r\n  const [battlefield, setBattlefield] = useState([]);\r\n  const [selectedCard, setSelectedCard] = useState([]);\r\n  const [gold, setGold] = useState(200);\r\n\r\n  useEffect(() => {\r\n    shuffleArray(array);\r\n    setCards(array);\r\n  }, []);\r\n\r\n  const CheckType = (item) => {\r\n    if (item.type == \"spell\") {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const onCardClick = (e) => {\r\n    let clicked = e.target.closest(\"div\");\r\n    let card = playercards.filter((x) => x.id === clicked.id);\r\n    setSelectedCard(card);\r\n    console.log(selectedCard);\r\n  };\r\n\r\n  const shuffleArray = (array) => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n  };\r\n\r\n  const startGame = () => {\r\n    let newArr = [];\r\n    newArr.push(cards[1], cards[2], cards[3]);\r\n    setPlayerCards(newArr);\r\n\r\n    setButtonShow(false);\r\n  };\r\n\r\n  const onPlayCard = () => {\r\n    setBattlefield(selectedCard);\r\n\r\n    let index = playercards.findIndex((x) => x.id === selectedCard[0].id);\r\n\r\n    playercards.splice(index, 1);\r\n  };\r\n\r\n  return (\r\n    <CanvasWrapper>\r\n      <StartGameButton\r\n        style={buttonShow ? { display: \"flex\" } : { display: \"none\" }}\r\n        onClick={startGame}\r\n      >\r\n        START GAME\r\n      </StartGameButton>\r\n      <BattleField selectedCard={battlefield} />\r\n      <Player onPlayCard={onPlayCard} />\r\n      <PlayerFiledContainer>\r\n        <LeftToolBarContainer>\r\n          <GoldStatus>Gold: {gold}</GoldStatus>\r\n          <PlayCardButton onClick={onPlayCard}>\r\n            Play Selected Card!\r\n          </PlayCardButton>\r\n\r\n          <CardContainer>\r\n            {playercards.map(function (item, i) {\r\n              return CheckType(item) ? (\r\n                <div key={i} onClick={onCardClick}>\r\n                  <CharacterCard\r\n                    highlight={highlight}\r\n                    id={item.id}\r\n                    value={i}\r\n                    name={item.name}\r\n                    img={item.img}\r\n                    type={item.type}\r\n                    atk={item.atk}\r\n                    def={item.def}\r\n                    descText={item.descText}\r\n                    hp={item.hp}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div key={i} onClick={onCardClick}>\r\n                  <SpellCard\r\n                    id={item.id}\r\n                    key={i}\r\n                    name={item.name}\r\n                    img={item.img}\r\n                    type={item.type}\r\n                    descText={item.descText}\r\n                    cost={item.cost}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </CardContainer>\r\n        </LeftToolBarContainer>\r\n      </PlayerFiledContainer>\r\n    </CanvasWrapper>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvas\\CanvasElements.js",["108"],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\player\\Player.js",["109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],"import React, { useState } from \"react\";\r\nimport CharacterCard from \"../card/CharacterCard\";\r\nimport SpellCard from \"../card/SpellCard\";\r\nimport {\r\n  PlayerFiledContainer,\r\n  CardContainer,\r\n  GoldStatus,\r\n  PlayCardButton,\r\n  LeftToolBarContainer,\r\n} from \"./PlayerElements\";\r\n\r\nimport jesper from \"../../Img/jesper.jpg\";\r\nimport jon from \"../../Img/jon.jpg\";\r\nimport tinymce from \"../../Img/tinymce.jpg\";\r\n\r\nconst Player = ({ playercards, onPlayCard }) => {\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedvalue, setSelectedValue] = useState(null);\r\n  const [gold, setGold] = useState(200);\r\n\r\n  const onCardClick = (e) => {\r\n    setHighlight(!highlight);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <PlayerFiledContainer>\r\n        <LeftToolBarContainer>\r\n          <GoldStatus>Gold: {gold}</GoldStatus>\r\n          <PlayCardButton onClick={onPlayCard}>\r\n            Play Selected Card!\r\n          </PlayCardButton>\r\n        </LeftToolBarContainer>\r\n      </PlayerFiledContainer> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\BattleField.js",["126"],"import React from \"react\";\r\nimport CharacterCardBattleField from \"../card/CharacterCardBattleField\";\r\nimport SpellCardBattleField from \"../card/SpellCardBattleField\";\r\nimport {\r\n  BattlefieldContainer,\r\n  BattlefieldInnerContainer,\r\n} from \"./BattleFieldElements\";\r\n\r\nconst BattleField = ({ selectedCard }) => {\r\n  const CheckType = (item) => {\r\n    if (item.type == \"spell\") {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  //   console.log(selectedCard);\r\n\r\n  return (\r\n    <>\r\n      <BattlefieldContainer>\r\n        <BattlefieldInnerContainer>\r\n          {selectedCard.map(function (item, i) {\r\n            return CheckType(item) ? (\r\n              <div key={i}>\r\n                <CharacterCardBattleField\r\n                  /* highlight={highlight} */\r\n                  id={item.id}\r\n                  value={i}\r\n                  name={item.name}\r\n                  img={item.img}\r\n                  type={item.type}\r\n                  atk={item.atk}\r\n                  def={item.def}\r\n                  descText={item.descText}\r\n                  hp={item.hp}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div key={i}>\r\n                <SpellCardBattleField\r\n                  id={item.id}\r\n                  key={i}\r\n                  name={item.name}\r\n                  img={item.img}\r\n                  type={item.type}\r\n                  descText={item.descText}\r\n                  cost={item.cost}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </BattlefieldInnerContainer>\r\n      </BattlefieldContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BattleField;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsarray\\CardArray.js",["127"],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\player\\PlayerElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\BattleFieldElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCardBattleField.js",["128","129","130","131","132","133"],"import React, { useState } from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { createStore, store } from \"redux\";\r\n/* import SelectReducer from \"./SelectReducer\"; */\r\nimport {\r\n  CardWrapper,\r\n  CardName,\r\n  CardImg,\r\n  AtkDefWrapper,\r\n  Atk,\r\n  Def,\r\n  DescriptionText,\r\n  Type,\r\n  HPWrapper,\r\n  HP,\r\n} from \"./CharacterCardBattleFieldElements\";\r\nimport Player from \"../player/Player\";\r\n\r\nconst CharacterCardBattleField = ({\r\n  name,\r\n  img,\r\n  type,\r\n  atk,\r\n  def,\r\n  descText,\r\n  hp,\r\n  id,\r\n  value,\r\n}) => {\r\n  let array = [];\r\n  const [highlight, setHighlight] = useState(false);\r\n\r\n  const onCardClick = (e) => {\r\n    setHighlight(!highlight);\r\n  };\r\n\r\n  const checkIfAlone = (array) => {\r\n    if (array.length < 1) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // style={highlight ? { border: '4px solid yellow'} : { border: 'none'} }\r\n  return (\r\n    <CardWrapper\r\n      value={value}\r\n      style={highlight ? { border: \"2px solid red\" } : { border: \"none\" }}\r\n      id={id}\r\n      onClick={onCardClick}\r\n    >\r\n      {/* <button onClick={onPlayCard} style={highlight ? buttonStyle : {display: \"none\"}}>Play card?</button> */}\r\n      <CardName>{name}</CardName>\r\n      <CardImg src={img} />\r\n      <Type>[{type}]</Type>\r\n      <AtkDefWrapper>\r\n        <Atk>Atk: {atk}</Atk>\r\n        <Def>Def: {def}</Def>\r\n      </AtkDefWrapper>\r\n      <DescriptionText>{descText}</DescriptionText>\r\n      <HPWrapper>\r\n        <HP>HP: {hp}</HP>\r\n      </HPWrapper>\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\n// const buttonStyle = {\r\n//     padding: \"5px 5px\",\r\n//     background: \"none\",\r\n//     border: \"1px solid black\"\r\n// }\r\n\r\nexport default CharacterCardBattleField;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCardBattleFieldElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCardBattleField.js",["134","135","136"],"import React, { useState } from \"react\";\r\nimport {\r\n  CardWrapper,\r\n  CardName,\r\n  CardImg,\r\n  DescriptionText,\r\n  Type,\r\n  CostWrapper,\r\n  Cost,\r\n} from \"./SpellCardBattleFieldElements\";\r\n\r\nconst SpellCard = ({ name, img, type, descText, cost, value, id }) => {\r\n  //style={highlight ? { border: '3px solid red'} : { border: 'none'} } onClick={onCardClick}\r\n\r\n  const [highlight, setHighlight] = useState(false);\r\n  const [inPlay, setInPlay] = useState([]);\r\n\r\n  const onCardClick = () => {\r\n    setHighlight(!highlight);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CardWrapper\r\n        id={id}\r\n        value={value}\r\n        style={highlight ? { border: \"2px solid yellow\" } : { border: \"none\" }}\r\n        onClick={onCardClick}\r\n      >\r\n        {/* <button style={highlight ? buttonStyle : {display: \"none\"}}>Play card?</button> */}\r\n        <CardName>{name}</CardName>\r\n        <CardImg src={img} />\r\n        <Type>[{type}]</Type>\r\n        <DescriptionText>{descText}</DescriptionText>\r\n        <CostWrapper>\r\n          <Cost>Cost: {cost}</Cost>\r\n        </CostWrapper>\r\n      </CardWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst buttonStyle = {\r\n  padding: \"5px 5px\",\r\n  background: \"none\",\r\n  border: \"1px solid black\",\r\n};\r\n\r\nexport default SpellCard;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCardBattleFieldElements.js",[],{"ruleId":"137","severity":1,"message":"138","line":4,"column":22,"nodeType":"139","messageId":"140","endLine":4,"endColumn":37},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"137","severity":1,"message":"145","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":16},{"ruleId":"137","severity":1,"message":"146","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":21},{"ruleId":"137","severity":1,"message":"147","line":3,"column":23,"nodeType":"139","messageId":"140","endLine":3,"endColumn":28},{"ruleId":"137","severity":1,"message":"148","line":17,"column":8,"nodeType":"139","messageId":"140","endLine":17,"endColumn":14},{"ruleId":"137","severity":1,"message":"149","line":30,"column":7,"nodeType":"139","messageId":"140","endLine":30,"endColumn":12},{"ruleId":"137","severity":1,"message":"150","line":37,"column":9,"nodeType":"139","messageId":"140","endLine":37,"endColumn":21},{"ruleId":"137","severity":1,"message":"151","line":16,"column":10,"nodeType":"139","messageId":"140","endLine":16,"endColumn":16},{"ruleId":"137","severity":1,"message":"152","line":16,"column":18,"nodeType":"139","messageId":"140","endLine":16,"endColumn":27},{"ruleId":"137","severity":1,"message":"153","line":43,"column":7,"nodeType":"139","messageId":"140","endLine":43,"endColumn":18},{"ruleId":"137","severity":1,"message":"154","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":9},{"ruleId":"137","severity":1,"message":"155","line":23,"column":21,"nodeType":"139","messageId":"140","endLine":23,"endColumn":33},{"ruleId":"137","severity":1,"message":"156","line":27,"column":16,"nodeType":"139","messageId":"140","endLine":27,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":32,"column":6,"nodeType":"159","endLine":32,"endColumn":8,"suggestions":"160"},{"ruleId":"161","severity":1,"message":"162","line":35,"column":19,"nodeType":"163","messageId":"164","endLine":35,"endColumn":21},{"ruleId":"137","severity":1,"message":"165","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":18},{"ruleId":"137","severity":1,"message":"166","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":21},{"ruleId":"137","severity":1,"message":"167","line":3,"column":8,"nodeType":"139","messageId":"140","endLine":3,"endColumn":17},{"ruleId":"137","severity":1,"message":"168","line":5,"column":3,"nodeType":"139","messageId":"140","endLine":5,"endColumn":23},{"ruleId":"137","severity":1,"message":"169","line":6,"column":3,"nodeType":"139","messageId":"140","endLine":6,"endColumn":16},{"ruleId":"137","severity":1,"message":"170","line":7,"column":3,"nodeType":"139","messageId":"140","endLine":7,"endColumn":13},{"ruleId":"137","severity":1,"message":"171","line":8,"column":3,"nodeType":"139","messageId":"140","endLine":8,"endColumn":17},{"ruleId":"137","severity":1,"message":"172","line":9,"column":3,"nodeType":"139","messageId":"140","endLine":9,"endColumn":23},{"ruleId":"137","severity":1,"message":"173","line":12,"column":8,"nodeType":"139","messageId":"140","endLine":12,"endColumn":14},{"ruleId":"137","severity":1,"message":"174","line":13,"column":8,"nodeType":"139","messageId":"140","endLine":13,"endColumn":11},{"ruleId":"137","severity":1,"message":"175","line":14,"column":8,"nodeType":"139","messageId":"140","endLine":14,"endColumn":15},{"ruleId":"137","severity":1,"message":"176","line":18,"column":10,"nodeType":"139","messageId":"140","endLine":18,"endColumn":18},{"ruleId":"137","severity":1,"message":"177","line":18,"column":20,"nodeType":"139","messageId":"140","endLine":18,"endColumn":31},{"ruleId":"137","severity":1,"message":"178","line":19,"column":10,"nodeType":"139","messageId":"140","endLine":19,"endColumn":23},{"ruleId":"137","severity":1,"message":"179","line":19,"column":25,"nodeType":"139","messageId":"140","endLine":19,"endColumn":41},{"ruleId":"137","severity":1,"message":"180","line":20,"column":10,"nodeType":"139","messageId":"140","endLine":20,"endColumn":14},{"ruleId":"137","severity":1,"message":"156","line":20,"column":16,"nodeType":"139","messageId":"140","endLine":20,"endColumn":23},{"ruleId":"137","severity":1,"message":"181","line":22,"column":9,"nodeType":"139","messageId":"140","endLine":22,"endColumn":20},{"ruleId":"161","severity":1,"message":"162","line":11,"column":19,"nodeType":"163","messageId":"164","endLine":11,"endColumn":21},{"ruleId":"137","severity":1,"message":"182","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":13},{"ruleId":"137","severity":1,"message":"145","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":16},{"ruleId":"137","severity":1,"message":"146","line":3,"column":10,"nodeType":"139","messageId":"140","endLine":3,"endColumn":21},{"ruleId":"137","severity":1,"message":"147","line":3,"column":23,"nodeType":"139","messageId":"140","endLine":3,"endColumn":28},{"ruleId":"137","severity":1,"message":"148","line":17,"column":8,"nodeType":"139","messageId":"140","endLine":17,"endColumn":14},{"ruleId":"137","severity":1,"message":"149","line":30,"column":7,"nodeType":"139","messageId":"140","endLine":30,"endColumn":12},{"ruleId":"137","severity":1,"message":"150","line":37,"column":9,"nodeType":"139","messageId":"140","endLine":37,"endColumn":21},{"ruleId":"137","severity":1,"message":"151","line":16,"column":10,"nodeType":"139","messageId":"140","endLine":16,"endColumn":16},{"ruleId":"137","severity":1,"message":"152","line":16,"column":18,"nodeType":"139","messageId":"140","endLine":16,"endColumn":27},{"ruleId":"137","severity":1,"message":"153","line":43,"column":7,"nodeType":"139","messageId":"140","endLine":43,"endColumn":18},"no-unused-vars","'combineReducers' is defined but never used.","Identifier","unusedVar","no-native-reassign",["183"],"no-negated-in-lhs",["184"],"'Switch' is defined but never used.","'createStore' is defined but never used.","'store' is defined but never used.","'Player' is defined but never used.","'array' is assigned a value but never used.","'checkIfAlone' is assigned a value but never used.","'inPlay' is assigned a value but never used.","'setInPlay' is assigned a value but never used.","'buttonStyle' is assigned a value but never used.","'_' is defined but never used.","'setHighlight' is assigned a value but never used.","'setGold' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'array'. Either include it or remove the dependency array. If 'setCards' needs the current value of 'array', you can also switch to useReducer instead of useState and read 'array' in the reducer.","ArrayExpression",["185"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Background' is defined but never used.","'CharacterCard' is defined but never used.","'SpellCard' is defined but never used.","'PlayerFiledContainer' is defined but never used.","'CardContainer' is defined but never used.","'GoldStatus' is defined but never used.","'PlayCardButton' is defined but never used.","'LeftToolBarContainer' is defined but never used.","'jesper' is defined but never used.","'jon' is defined but never used.","'tinymce' is defined but never used.","'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'selectedvalue' is assigned a value but never used.","'setSelectedValue' is assigned a value but never used.","'gold' is assigned a value but never used.","'onCardClick' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},"Update the dependencies array to be: [array]",{"range":"188","text":"189"},[1020,1022],"[array]"]