[{"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\index.js":"1","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\App.js":"2","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\FunctionsComponent.js":"3","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\BattleField.js":"4","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\OpponentBattleField.js":"5","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\Spelleffects\\Spells.js":"6","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsarray\\CardArray.js":"7","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\opponent\\OpponentTurn.js":"8","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsarray\\OpponentCardArray.js":"9","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvas\\Canvas.js":"10","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\BattleFieldElements.js":"11","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\OpponentBattleFieldElements.js":"12","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\OppCharBattleField.js":"13","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCardBattleField.js":"14","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCardBattleField.js":"15","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsHand\\OpponentCardsHandRender.js":"16","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsHand\\OpponentCardsHand.js":"17","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsHand\\CardsHand.js":"18","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\Spelleffects\\SpellShowRender.js":"19","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvasInterface\\CanvasInterfaceRender.js":"20","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvas\\CanvasElements.js":"21","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\player\\Player.js":"22","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\player\\PlayerElements.js":"23","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCardBattleFieldElements.js":"24","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCardBattleFieldElements.js":"25","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsHand\\OpponentCardsHandElements.js":"26","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCard.js":"27","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCard.js":"28","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\Spelleffects\\SpellShowCard.js":"29","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvasInterface\\CanvasInterfaceElements.js":"30","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCardElements.js":"31","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCardElements.js":"32","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\Spelleffects\\SpellShowCardElements.js":"33"},{"size":173,"mtime":1611138688772,"results":"34","hashOfConfig":"35"},{"size":432,"mtime":1612005718146,"results":"36","hashOfConfig":"35"},{"size":18224,"mtime":1612083240886,"results":"37","hashOfConfig":"35"},{"size":1855,"mtime":1611759197697,"results":"38","hashOfConfig":"35"},{"size":1956,"mtime":1611303974018,"results":"39","hashOfConfig":"35"},{"size":3202,"mtime":1612081681222,"results":"40","hashOfConfig":"35"},{"size":15078,"mtime":1612081674010,"results":"41","hashOfConfig":"35"},{"size":593,"mtime":1611741275971,"results":"42","hashOfConfig":"35"},{"size":15984,"mtime":1612081987999,"results":"43","hashOfConfig":"35"},{"size":8258,"mtime":1612006060340,"results":"44","hashOfConfig":"35"},{"size":295,"mtime":1611300948203,"results":"45","hashOfConfig":"35"},{"size":295,"mtime":1611300948204,"results":"46","hashOfConfig":"35"},{"size":1080,"mtime":1611304120905,"results":"47","hashOfConfig":"35"},{"size":1135,"mtime":1611835801435,"results":"48","hashOfConfig":"35"},{"size":984,"mtime":1611235305463,"results":"49","hashOfConfig":"35"},{"size":457,"mtime":1611233891460,"results":"50","hashOfConfig":"35"},{"size":720,"mtime":1611233661685,"results":"51","hashOfConfig":"35"},{"size":1763,"mtime":1611300948207,"results":"52","hashOfConfig":"35"},{"size":1121,"mtime":1611319745929,"results":"53","hashOfConfig":"35"},{"size":2354,"mtime":1611755100473,"results":"54","hashOfConfig":"35"},{"size":4543,"mtime":1612005718148,"results":"55","hashOfConfig":"35"},{"size":425,"mtime":1611233919394,"results":"56","hashOfConfig":"35"},{"size":1938,"mtime":1611844247054,"results":"57","hashOfConfig":"35"},{"size":2507,"mtime":1611587245353,"results":"58","hashOfConfig":"35"},{"size":1921,"mtime":1611221801340,"results":"59","hashOfConfig":"35"},{"size":767,"mtime":1611844033248,"results":"60","hashOfConfig":"35"},{"size":1010,"mtime":1611303928532,"results":"61","hashOfConfig":"35"},{"size":1096,"mtime":1611233807305,"results":"62","hashOfConfig":"35"},{"size":1126,"mtime":1611319783028,"results":"63","hashOfConfig":"35"},{"size":2362,"mtime":1611844148418,"results":"64","hashOfConfig":"35"},{"size":2502,"mtime":1611588644074,"results":"65","hashOfConfig":"35"},{"size":2161,"mtime":1611664378561,"results":"66","hashOfConfig":"35"},{"size":1985,"mtime":1611846055704,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"103feb",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\index.js",[],["141","142"],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\App.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\FunctionsComponent.js",["143","144","145","146","147","148","149","150","151"],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\BattleField.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\OpponentBattleField.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\Spelleffects\\Spells.js",["152"],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsarray\\CardArray.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\opponent\\OpponentTurn.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsarray\\OpponentCardArray.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvas\\Canvas.js",["153","154","155","156","157","158"],"import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CanvasWrapper,\r\n  StartGameButton,\r\n  AlreadyAtked,\r\n  WonGamePage,\r\n  WonGamePageButton,\r\n  WonGamePageHeader,\r\n  PlayButton,\r\n  MuteButton,\r\n} from \"./CanvasElements\";\r\nimport CanvasInterfaceRender from \"../canvasInterface/CanvasInterfaceRender\";\r\nimport { OpponentTurn } from \"../opponent/OpponentTurn\";\r\nimport BattleField from \"../battlefield/BattleField\";\r\nimport OpponentBattleField from \"../battlefield/OpponentBattleField\";\r\nimport OpponentCardsHandRender from \"../cardsHand/OpponentCardsHandRender\";\r\nimport CardsHand from \"../cardsHand/CardsHand\";\r\nimport Player from \"../player/Player\";\r\nimport SpellShowRender from \"../Spelleffects/SpellShowRender\";\r\nimport {\r\n  OpponentCardContainer,\r\n  PlayerFiledContainer,\r\n  PlayerCardsContainer,\r\n  PlayCardButton,\r\n} from \"../player/PlayerElements\";\r\nimport { BattlefieldContainer } from \"../battlefield/BattleFieldElements\";\r\nimport useSound from \"use-sound\";\r\nimport backMusic from \"../../music/background-music.mp3\";\r\n\r\nlet newCardHp = 0;\r\nlet newCardDef = 0;\r\nlet AtkCardNewDef = 0;\r\nlet AtkCardNewHp = 0;\r\n\r\nconst Canvas = ({\r\n  endTurnFunc,\r\n  opponentBattleField,\r\n  opponentCardsinhand,\r\n  startGame,\r\n  cardsinhand,\r\n  buttonShow,\r\n  whichTurn,\r\n  onPlayCard,\r\n  onCardClick,\r\n  battlefield,\r\n  enoughgold,\r\n  hp,\r\n  opponentHp,\r\n  gold,\r\n  oppGold,\r\n  startGameActive,\r\n  deck,\r\n  oppDeck,\r\n  newOpponentHp,\r\n  newPlayerHp,\r\n  newOpponentBattleField,\r\n  spellBattlefieldArr,\r\n  setAttackingCard,\r\n  attackingCard,\r\n  onAttackCardClick,\r\n  setAlreadyAtkedCards,\r\n  attacked,\r\n  silenceBot,\r\n  yourturn,\r\n}) => {\r\n  const [defendingCard, setDefendingCard] = useState([]);\r\n  const [chosenDef, setChosenDef] = useState();\r\n  const [thiscardhasatked, setThiscardhasatked] = useState(false);\r\n  const [enemyTargeted, setEnemeyTarget] = useState(false);\r\n\r\n  const [lostgame, setLostGame] = useState(false);\r\n  const [wongame, setWonGame] = useState(false);\r\n\r\n  /*   const soundUrl = '../../music/background-music.mp3' */\r\n\r\n  const [play] = useSound(backMusic);\r\n\r\n  const toggleEnemyTarget = () => setEnemeyTarget(!enemyTargeted);\r\n  const CheckType = (item) => {\r\n    if (item.type === \"spell\") {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const attackingFunc = () => {\r\n    if (silenceBot == true) {\r\n      console.log(\"You are silenced\");\r\n      return;\r\n    }\r\n    if (enemyTargeted === true && opponentBattleField.length === 0) {\r\n      if (attacked.includes(attackingCard[0])) {\r\n        setThiscardhasatked(true);\r\n        setTimeout(() => {\r\n          setThiscardhasatked(false);\r\n        }, 2500);\r\n      } else {\r\n        setAlreadyAtkedCards();\r\n        if (attackingCard.length === 0) {\r\n          return;\r\n        }\r\n        let newOppHp = opponentHp - attackingCard[0].atk;\r\n        newOpponentHp(newOppHp);\r\n      }\r\n    }\r\n    if (attackingCard.length == 0 || defendingCard.length == 0) {\r\n      return;\r\n    } else if (attacked.includes(attackingCard[0])) {\r\n      setThiscardhasatked(true);\r\n      setTimeout(() => {\r\n        setThiscardhasatked(false);\r\n      }, 2500);\r\n      return;\r\n    } else {\r\n      setAlreadyAtkedCards();\r\n      DefreduceDefAndHp();\r\n      AtkReduceDefAndHp();\r\n      setAttackingCard([]);\r\n      setDefendingCard([]);\r\n    }\r\n  };\r\n\r\n  const reduceOppHp = () => {\r\n    let attack = attackingCard[0].atk;\r\n    let total = defendingCard[0].def + defendingCard[0].hp;\r\n    let damage = attack - total;\r\n    newOpponentHp(opponentHp - damage);\r\n  };\r\n\r\n  const reducePlayerHp = () => {\r\n    let attack = defendingCard[0].atk;\r\n    let total = attackingCard[0].def + attackingCard[0].hp;\r\n    let damage = attack - total;\r\n    newPlayerHp(hp - damage);\r\n  };\r\n\r\n  const DefreduceDefAndHp = () => {\r\n    if (attackingCard[0].atk <= defendingCard[0].def) {\r\n      newCardDef = defendingCard[0].def - attackingCard[0].atk;\r\n      defendingCard[0].def = newCardDef;\r\n    } else if (attackingCard[0].atk > defendingCard[0].def) {\r\n      let remainAtk = attackingCard[0].atk - defendingCard[0].def;\r\n      newCardHp = defendingCard[0].hp - remainAtk;\r\n      if (newCardHp <= 0) {\r\n        reduceOppHp();\r\n        destroyCard(opponentBattleField, defendingCard);\r\n      } else {\r\n        defendingCard[0].hp = newCardHp;\r\n        defendingCard[0].def = 0;\r\n      }\r\n    }\r\n  };\r\n\r\n  const AtkReduceDefAndHp = () => {\r\n    if (defendingCard[0].atk <= attackingCard[0].def) {\r\n      AtkCardNewDef = attackingCard[0].def - defendingCard[0].atk;\r\n      attackingCard[0].def = AtkCardNewDef;\r\n      return newCardDef;\r\n    } else if (defendingCard[0].atk > attackingCard[0].def) {\r\n      let remainAtk = defendingCard[0].atk - attackingCard[0].def;\r\n      AtkCardNewHp = attackingCard[0].hp - remainAtk;\r\n      if (AtkCardNewHp <= 0) {\r\n        reducePlayerHp();\r\n        destroyCard(battlefield, attackingCard);\r\n      } else {\r\n        attackingCard[0].hp = AtkCardNewHp;\r\n        attackingCard[0].def = 0;\r\n      }\r\n    }\r\n  };\r\n\r\n  const destroyCard = (arr, card) => {\r\n    let index = arr.findIndex((x) => x.id === card[0].id);\r\n    arr.splice(index, 1);\r\n  };\r\n\r\n  const onDefendingCardClick = (e) => {\r\n    let clickedDefendingCard = e.target.closest(\"div\");\r\n    let card = opponentBattleField.filter(\r\n      (x) => x.id === clickedDefendingCard.id\r\n    );\r\n    setDefendingCard(card);\r\n    setChosenDef(card);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (hp <= 0) {\r\n      setLostGame(true);\r\n    } else if (opponentHp <= 0) {\r\n      setWonGame(true);\r\n    }\r\n  }, [hp, opponentHp]);\r\n\r\n  const restartGame = () => {\r\n    window.location.reload();\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <CanvasWrapper>\r\n      <OpponentTurn />\r\n      <PlayButton onClick={play}>Music</PlayButton>\r\n\r\n      <StartGameButton\r\n        style={buttonShow ? { display: \"flex\" } : { display: \"none\" }}\r\n        onClick={startGame}\r\n      >\r\n        START GAME\r\n      </StartGameButton>\r\n\r\n      {wongame ? (\r\n        <WonGamePage>\r\n          <WonGamePageHeader>\r\n            Congratulations! You won over the evil bot! You're the man, champ.\r\n          </WonGamePageHeader>\r\n          <WonGamePageButton onClick={restartGame}>\r\n            Restart Game\r\n          </WonGamePageButton>\r\n        </WonGamePage>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {/* {lostgame ? <LostGamePage></LostGamePage> : ''} */}\r\n\r\n      {thiscardhasatked ? (\r\n        <AlreadyAtked>This Card Has Already Attacked!</AlreadyAtked>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {startGameActive ? (\r\n        <CanvasInterfaceRender\r\n          enoughgold={enoughgold}\r\n          buttonShow={buttonShow}\r\n          endTurnFunc={endTurnFunc}\r\n          startGame={startGame}\r\n          whichTurn={whichTurn}\r\n          onPlayCard={onPlayCard}\r\n          gold={gold}\r\n          hp={hp}\r\n          opponentHp={opponentHp}\r\n          deck={deck}\r\n          oppDeck={oppDeck}\r\n          attackingFunc={attackingFunc}\r\n          toggleEnemyTarget={toggleEnemyTarget}\r\n          enemyTargeted={enemyTargeted}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      <SpellShowRender spellBattlefieldArr={spellBattlefieldArr} />\r\n\r\n      <OpponentCardContainer>\r\n        <OpponentCardsHandRender opponentCardsinhand={opponentCardsinhand} />\r\n      </OpponentCardContainer>\r\n\r\n      <OpponentBattleField\r\n        onDefendingCardClick={onDefendingCardClick}\r\n        opponentBattlefield={opponentBattleField}\r\n      />\r\n\r\n      <BattlefieldContainer>\r\n        <BattleField\r\n          yourturn={yourturn}\r\n          onAttackCardClick={onAttackCardClick}\r\n          Battlefield={battlefield}\r\n        />\r\n      </BattlefieldContainer>\r\n\r\n      <Player onPlayCard={onPlayCard} hp={hp} />\r\n      <p>{oppGold}</p>\r\n\r\n      <PlayerFiledContainer>\r\n        <PlayerCardsContainer>\r\n          <CardsHand\r\n            cardsinhand={cardsinhand}\r\n            onCardClick={onCardClick}\r\n            CheckType={CheckType}\r\n          />\r\n        </PlayerCardsContainer>\r\n        {startGameActive ? (\r\n          <PlayCardButton onClick={onPlayCard}>\r\n            Play Selected Card!\r\n          </PlayCardButton>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </PlayerFiledContainer>\r\n    </CanvasWrapper>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\BattleFieldElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\battlefield\\OpponentBattleFieldElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\OppCharBattleField.js",["159"],"import React, { useState } from \"react\";\r\n/* import SelectReducer from \"./SelectReducer\"; */\r\nimport {\r\n  CardWrapper,\r\n  CardName,\r\n  CardImg,\r\n  AtkDefWrapper,\r\n  Atk,\r\n  Def,\r\n  DescriptionText,\r\n  Type,\r\n  HPWrapper,\r\n  HP,\r\n} from \"./CharacterCardBattleFieldElements\";\r\n\r\n\r\nconst OppCharBattleField = ({\r\n  name,\r\n  img,\r\n  type,\r\n  atk,\r\n  def,\r\n  descText,\r\n  hp,\r\n  id,\r\n  value,\r\n  onDefendingCardClick,\r\n  active,\r\n  onClick\r\n}) => {\r\n  // onDefendingCardClick || setChosen\r\n  return (\r\n    <CardWrapper\r\n      value={value}\r\n      style={active ? { border: \"5px solid red\" } : { border: \"\" }}\r\n      id={id}\r\n      onClick={(e) => {onClick(); onDefendingCardClick(e)} }\r\n    >\r\n\r\n      <CardName>{name}</CardName>\r\n      <CardImg src={img} />\r\n      <Type>[{type}]</Type>\r\n      <AtkDefWrapper>\r\n        <Atk>Atk: {atk}</Atk>\r\n        <Def>Def: {def}</Def>\r\n      </AtkDefWrapper>\r\n      <DescriptionText>{descText}</DescriptionText>\r\n      <HPWrapper>\r\n        <HP>HP: {hp}</HP>\r\n      </HPWrapper>\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\nexport default OppCharBattleField;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCardBattleField.js",["160"],"import React, { useState } from \"react\";\r\n/* import SelectReducer from \"./SelectReducer\"; */\r\nimport {\r\n  CardWrapper,\r\n  CardName,\r\n  CardImg,\r\n  AtkDefWrapper,\r\n  Atk,\r\n  Def,\r\n  DescriptionText,\r\n  Type,\r\n  HPWrapper,\r\n  HP,\r\n} from \"./CharacterCardBattleFieldElements\";\r\n\r\n\r\nconst CharacterCardBattleField = ({\r\n  name,\r\n  img,\r\n  type,\r\n  atk,\r\n  def,\r\n  descText,\r\n  hp,\r\n  id,\r\n  value,\r\n  onAttackCardClick,\r\n  onDefendingCardClick,\r\n  onClick,\r\n  active,\r\n  item,\r\n  playerClick,\r\n  setChosenAtk,\r\n  onPlayerClick\r\n}) => {\r\n \r\n  return (\r\n    <CardWrapper\r\n      value={value}\r\n      style={active ? { border: \"5px solid blue\" } : { border: \"\" }}\r\n      id={id}\r\n      onClick={(e) => {onClick(); onAttackCardClick(e)} }\r\n    >\r\n\r\n      <CardName>{name}</CardName>\r\n      <CardImg src={img} />\r\n      <Type>[{type}]</Type>\r\n      <AtkDefWrapper>\r\n        <Atk>Atk: {atk}</Atk>\r\n        <Def>Def: {def}</Def>\r\n      </AtkDefWrapper>\r\n      <DescriptionText>{descText}</DescriptionText>\r\n      <HPWrapper>\r\n        <HP>HP: {hp}</HP>\r\n      </HPWrapper>\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\nexport default CharacterCardBattleField;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCardBattleField.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsHand\\OpponentCardsHandRender.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsHand\\OpponentCardsHand.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsHand\\CardsHand.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\Spelleffects\\SpellShowRender.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvasInterface\\CanvasInterfaceRender.js",["161"],"import React from 'react'\r\nimport {\r\n    \r\n    NotEnoughError,\r\n    EndTurnButton, \r\n    TurnInicator\r\n} from \"../canvas/CanvasElements\";\r\nimport {RightToolBarContainer, Hpcontainer, GoldStatus, LeftToolBarContainer } from \"../player/PlayerElements\";\r\n/* import { PlayCardButton, GoldStatus, LeftToolBarContainer } from \"./Player/PlayerElements\"; */\r\nimport { OpponentDeckWrapper, PlayerDeckWrapper, VisualDeck, OpponentCardsLeft, PlayerCardsLeft, AttackButton, OpponentHpcontainer, StyledSwords, AttackText, EnemyAvatar } from './CanvasInterfaceElements'\r\n\r\n\r\nconst CanvasInterfaceRender = ({\r\n  endTurnFunc,\r\n  startGame,\r\n  enoughgold,\r\n  buttonShow,\r\n  whichTurn,\r\n  gold,\r\n  onPlayCard,\r\n  hp,\r\n  deck,\r\n  oppDeck,\r\n  attackingFunc,\r\n  opponentHp,\r\n  toggleEnemyTarget,\r\n  enemyTargeted\r\n}) => {\r\n  return (\r\n    <>\r\n      <OpponentDeckWrapper>\r\n        <VisualDeck>\r\n          <OpponentCardsLeft>{oppDeck.length}</OpponentCardsLeft>\r\n        </VisualDeck>\r\n      </OpponentDeckWrapper>\r\n      <PlayerDeckWrapper>\r\n        <VisualDeck>\r\n          <PlayerCardsLeft>{deck.length}</PlayerCardsLeft>\r\n        </VisualDeck>\r\n      </PlayerDeckWrapper>\r\n\r\n      <LeftToolBarContainer>\r\n        <GoldStatus>\r\n          {gold}{\" \"}\r\n          <i\r\n            className=\"fas fa-coins\"\r\n            style={{ fontSize: \"2rem\", marginLeft: \"6px\" }}\r\n          ></i>\r\n        </GoldStatus>\r\n      </LeftToolBarContainer>\r\n\r\n      <EndTurnButton onClick={endTurnFunc}>End Turn</EndTurnButton>\r\n\r\n      <NotEnoughError\r\n        style={enoughgold ? { display: \"block\" } : { display: \"none\" }}\r\n      >\r\n        Not Enough Gold!\r\n      </NotEnoughError>\r\n\r\n      <EnemyAvatar style={!enemyTargeted ? {filter: 'brightness(75%) contrast(150%)' } : {filter: 'brightness(50%) contrast(150%)' } } onClick={toggleEnemyTarget} />\r\n      <OpponentHpcontainer>{opponentHp}</OpponentHpcontainer>\r\n\r\n      <AttackText>Attack!</AttackText>\r\n      <StyledSwords onClick={attackingFunc} />\r\n\r\n      <RightToolBarContainer>\r\n        <Hpcontainer>{hp}</Hpcontainer>\r\n      </RightToolBarContainer>\r\n\r\n      <TurnInicator>{whichTurn}</TurnInicator>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CanvasInterfaceRender\r\n\r\n/* \r\nconst StyledSwords = styled(Swords)`\r\n  position: absolute;\r\n  z-index: 999;\r\n  bottom: 6.2%;\r\n  right: 28%;\r\n  height: 5rem;\r\n  width: 5rem;\r\n  cursor: pointer;\r\n` */","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvas\\CanvasElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\player\\Player.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\player\\PlayerElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCardBattleFieldElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCardBattleFieldElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\cardsHand\\OpponentCardsHandElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCard.js",["162"],"import React, { useState } from \"react\";\r\n\r\nimport {\r\n  CardWrapper,\r\n  CardName,\r\n  CardImg,\r\n  AtkDefWrapper,\r\n  Atk,\r\n  Def,\r\n  DescriptionText,\r\n  Type,\r\n  CostHpWrapper,\r\n  HP,\r\n  Cost\r\n} from \"./CharacterCardElements\";\r\n\r\n\r\nconst CharacterCard = ({\r\n  name,\r\n  img,\r\n  type,\r\n  atk,\r\n  def,\r\n  descText,\r\n  hp,\r\n  id,\r\n  value,\r\n  cost,\r\n  cardsinhand,\r\n  onClick,\r\n  active\r\n}) => {\r\n  \r\n  return (\r\n    <CardWrapper\r\n      value={value}\r\n      style={active ? { border: \"5px solid blue\" } : { border: \"\" }}\r\n      id={id}\r\n      onClick={onClick}\r\n    >\r\n\r\n      <CardName>{name}</CardName>\r\n      <CardImg src={img} draggable={false} />\r\n      <Type>[{type}]</Type>\r\n      <AtkDefWrapper>\r\n        <Atk>Atk: {atk}</Atk>\r\n        <Def>Def: {def}</Def>\r\n      </AtkDefWrapper>\r\n      <DescriptionText>{descText}</DescriptionText>\r\n      <CostHpWrapper>\r\n        <Cost>Cost: {cost}</Cost>\r\n        <HP>HP: {hp}</HP>\r\n      </CostHpWrapper>\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\nexport default CharacterCard;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCard.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\Spelleffects\\SpellShowCard.js",["163"],"import React, { useState } from \"react\";\r\nimport {\r\n  CardWrapper,\r\n  CardName,\r\n  CardImg,\r\n  DescriptionText,\r\n  Type,\r\n  CostWrapper,\r\n  Cost,\r\n} from \"./SpellShowCardElements\";\r\n\r\nconst SpellShowCard = ({ name, img, type, descText, cost, value, id }) => {\r\n  //style={highlight ? { border: '3px solid red'} : { border: 'none'} } onClick={onCardClick}\r\n/* \r\n  const [highlight, setHighlight] = useState(false);\r\n\r\n  const onCardClick = () => {\r\n    setHighlight(!highlight);\r\n  }; */\r\n\r\n  return (\r\n    <>\r\n      <CardWrapper\r\n        id={id}\r\n        value={value}\r\n      /*   style={highlight ? { border: \"5px solid yellow\" } : { border: \"\" }} */\r\n  /*       onClick={onCardClick} */\r\n      >\r\n        {/* <button style={highlight ? buttonStyle : {display: \"none\"}}>Play card?</button> */}\r\n        <CardName>{name}</CardName>\r\n        <CardImg src={img} draggable={false} />\r\n        <Type>[{type}]</Type>\r\n        <DescriptionText>{descText}</DescriptionText>\r\n        <CostWrapper>\r\n          <Cost>Cost: {cost}</Cost>\r\n        </CostWrapper>\r\n      </CardWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SpellShowCard;\r\n","C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\canvasInterface\\CanvasInterfaceElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\CharacterCardElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\card\\SpellCardElements.js",[],"C:\\Users\\Jesper\\KYH\\VSCode\\Projects\\gutenberg-cardgame\\src\\components\\Spelleffects\\SpellShowCardElements.js",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":2,"column":8,"nodeType":"170","messageId":"171","endLine":2,"endColumn":19},{"ruleId":"168","severity":1,"message":"172","line":3,"column":8,"nodeType":"170","messageId":"171","endLine":3,"endColumn":27},{"ruleId":"168","severity":1,"message":"173","line":17,"column":3,"nodeType":"170","messageId":"171","endLine":17,"endColumn":20},{"ruleId":"168","severity":1,"message":"174","line":21,"column":10,"nodeType":"170","messageId":"171","endLine":21,"endColumn":17},{"ruleId":"168","severity":1,"message":"175","line":23,"column":5,"nodeType":"170","messageId":"171","endLine":23,"endColumn":22},{"ruleId":"176","severity":1,"message":"177","line":99,"column":18,"nodeType":"178","messageId":"179","endLine":99,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":181,"column":18,"nodeType":"178","messageId":"179","endLine":181,"endColumn":20},{"ruleId":"176","severity":1,"message":"177","line":340,"column":18,"nodeType":"178","messageId":"179","endLine":340,"endColumn":20},{"ruleId":"180","severity":1,"message":"181","line":621,"column":6,"nodeType":"182","endLine":621,"endColumn":8,"suggestions":"183"},{"ruleId":"168","severity":1,"message":"184","line":1,"column":8,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"168","severity":1,"message":"185","line":10,"column":3,"nodeType":"170","messageId":"171","endLine":10,"endColumn":13},{"ruleId":"168","severity":1,"message":"186","line":67,"column":10,"nodeType":"170","messageId":"171","endLine":67,"endColumn":19},{"ruleId":"168","severity":1,"message":"187","line":71,"column":10,"nodeType":"170","messageId":"171","endLine":71,"endColumn":18},{"ruleId":"176","severity":1,"message":"177","line":88,"column":20,"nodeType":"178","messageId":"179","endLine":88,"endColumn":22},{"ruleId":"176","severity":1,"message":"177","line":107,"column":30,"nodeType":"178","messageId":"179","endLine":107,"endColumn":32},{"ruleId":"176","severity":1,"message":"177","line":107,"column":59,"nodeType":"178","messageId":"179","endLine":107,"endColumn":61},{"ruleId":"168","severity":1,"message":"188","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"168","severity":1,"message":"188","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"168","severity":1,"message":"189","line":10,"column":98,"nodeType":"170","messageId":"171","endLine":10,"endColumn":110},{"ruleId":"168","severity":1,"message":"188","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},{"ruleId":"168","severity":1,"message":"188","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":25},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'BattleField' is defined but never used.","Identifier","unusedVar","'OpponentBattleField' is defined but never used.","'startOpponentTurn' is defined but never used.","'forEach' is defined but never used.","'opponentBattleArr' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'makeOpponentDeck'. Either include it or remove the dependency array.","ArrayExpression",["192"],"'OpponentCardsHand' is defined but never used.","'MuteButton' is defined but never used.","'chosenDef' is assigned a value but never used.","'lostgame' is assigned a value but never used.","'useState' is defined but never used.","'AttackButton' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},"Update the dependencies array to be: [makeOpponentDeck]",{"range":"195","text":"196"},[16957,16959],"[makeOpponentDeck]"]